

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 23 16:25:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.30
    54                           ; Generated 15/09/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F15244 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011C                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  018F                     	;# 
   130  0190                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  020C                     	;# 
   134  020D                     	;# 
   135  020E                     	;# 
   136  020E                     	;# 
   137  020F                     	;# 
   138  020F                     	;# 
   139  0210                     	;# 
   140  0210                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  028C                     	;# 
   144  028C                     	;# 
   145  028D                     	;# 
   146  028D                     	;# 
   147  028E                     	;# 
   148  028F                     	;# 
   149  0290                     	;# 
   150  0291                     	;# 
   151  030C                     	;# 
   152  030C                     	;# 
   153  030D                     	;# 
   154  030E                     	;# 
   155  030F                     	;# 
   156  0310                     	;# 
   157  0310                     	;# 
   158  0311                     	;# 
   159  0312                     	;# 
   160  0313                     	;# 
   161  0314                     	;# 
   162  0314                     	;# 
   163  0315                     	;# 
   164  0316                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  059C                     	;# 
   170  059C                     	;# 
   171  059D                     	;# 
   172  059D                     	;# 
   173  059E                     	;# 
   174  059F                     	;# 
   175  070C                     	;# 
   176  070D                     	;# 
   177  070E                     	;# 
   178  0716                     	;# 
   179  0717                     	;# 
   180  0718                     	;# 
   181  080C                     	;# 
   182  0811                     	;# 
   183  0813                     	;# 
   184  0814                     	;# 
   185  081A                     	;# 
   186  081A                     	;# 
   187  081B                     	;# 
   188  081C                     	;# 
   189  081C                     	;# 
   190  081D                     	;# 
   191  081E                     	;# 
   192  081F                     	;# 
   193  088E                     	;# 
   194  0890                     	;# 
   195  0891                     	;# 
   196  0892                     	;# 
   197  0893                     	;# 
   198  090C                     	;# 
   199  1E8F                     	;# 
   200  1E90                     	;# 
   201  1E91                     	;# 
   202  1E92                     	;# 
   203  1E93                     	;# 
   204  1E9C                     	;# 
   205  1EA1                     	;# 
   206  1EA2                     	;# 
   207  1EC3                     	;# 
   208  1EC5                     	;# 
   209  1EC6                     	;# 
   210  1EC7                     	;# 
   211  1ECB                     	;# 
   212  1ECB                     	;# 
   213  1ECB                     	;# 
   214  1ECC                     	;# 
   215  1ECC                     	;# 
   216  1ECC                     	;# 
   217  1F10                     	;# 
   218  1F11                     	;# 
   219  1F12                     	;# 
   220  1F14                     	;# 
   221  1F15                     	;# 
   222  1F1C                     	;# 
   223  1F1D                     	;# 
   224  1F1E                     	;# 
   225  1F1F                     	;# 
   226  1F20                     	;# 
   227  1F21                     	;# 
   228  1F22                     	;# 
   229  1F23                     	;# 
   230  1F24                     	;# 
   231  1F25                     	;# 
   232  1F26                     	;# 
   233  1F27                     	;# 
   234  1F38                     	;# 
   235  1F39                     	;# 
   236  1F3A                     	;# 
   237  1F3B                     	;# 
   238  1F3C                     	;# 
   239  1F3D                     	;# 
   240  1F3E                     	;# 
   241  1F3F                     	;# 
   242  1F43                     	;# 
   243  1F44                     	;# 
   244  1F45                     	;# 
   245  1F46                     	;# 
   246  1F47                     	;# 
   247  1F48                     	;# 
   248  1F49                     	;# 
   249  1F4A                     	;# 
   250  1F4E                     	;# 
   251  1F4F                     	;# 
   252  1F50                     	;# 
   253  1F51                     	;# 
   254  1F52                     	;# 
   255  1F53                     	;# 
   256  1F54                     	;# 
   257  1F55                     	;# 
   258  1FE4                     	;# 
   259  1FE5                     	;# 
   260  1FE6                     	;# 
   261  1FE7                     	;# 
   262  1FE8                     	;# 
   263  1FE8                     	;# 
   264  1FE9                     	;# 
   265  1FEA                     	;# 
   266  1FEB                     	;# 
   267  1FED                     	;# 
   268  1FEE                     	;# 
   269  1FEF                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  0119                     	;# 
   301  011A                     	;# 
   302  011B                     	;# 
   303  011B                     	;# 
   304  011C                     	;# 
   305  011D                     	;# 
   306  011E                     	;# 
   307  011F                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018E                     	;# 
   311  018F                     	;# 
   312  0190                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  020E                     	;# 
   318  020E                     	;# 
   319  020F                     	;# 
   320  020F                     	;# 
   321  0210                     	;# 
   322  0210                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  028C                     	;# 
   326  028C                     	;# 
   327  028D                     	;# 
   328  028D                     	;# 
   329  028E                     	;# 
   330  028F                     	;# 
   331  0290                     	;# 
   332  0291                     	;# 
   333  030C                     	;# 
   334  030C                     	;# 
   335  030D                     	;# 
   336  030E                     	;# 
   337  030F                     	;# 
   338  0310                     	;# 
   339  0310                     	;# 
   340  0311                     	;# 
   341  0312                     	;# 
   342  0313                     	;# 
   343  0314                     	;# 
   344  0314                     	;# 
   345  0315                     	;# 
   346  0316                     	;# 
   347  0318                     	;# 
   348  0318                     	;# 
   349  0319                     	;# 
   350  031A                     	;# 
   351  059C                     	;# 
   352  059C                     	;# 
   353  059D                     	;# 
   354  059D                     	;# 
   355  059E                     	;# 
   356  059F                     	;# 
   357  070C                     	;# 
   358  070D                     	;# 
   359  070E                     	;# 
   360  0716                     	;# 
   361  0717                     	;# 
   362  0718                     	;# 
   363  080C                     	;# 
   364  0811                     	;# 
   365  0813                     	;# 
   366  0814                     	;# 
   367  081A                     	;# 
   368  081A                     	;# 
   369  081B                     	;# 
   370  081C                     	;# 
   371  081C                     	;# 
   372  081D                     	;# 
   373  081E                     	;# 
   374  081F                     	;# 
   375  088E                     	;# 
   376  0890                     	;# 
   377  0891                     	;# 
   378  0892                     	;# 
   379  0893                     	;# 
   380  090C                     	;# 
   381  1E8F                     	;# 
   382  1E90                     	;# 
   383  1E91                     	;# 
   384  1E92                     	;# 
   385  1E93                     	;# 
   386  1E9C                     	;# 
   387  1EA1                     	;# 
   388  1EA2                     	;# 
   389  1EC3                     	;# 
   390  1EC5                     	;# 
   391  1EC6                     	;# 
   392  1EC7                     	;# 
   393  1ECB                     	;# 
   394  1ECB                     	;# 
   395  1ECB                     	;# 
   396  1ECC                     	;# 
   397  1ECC                     	;# 
   398  1ECC                     	;# 
   399  1F10                     	;# 
   400  1F11                     	;# 
   401  1F12                     	;# 
   402  1F14                     	;# 
   403  1F15                     	;# 
   404  1F1C                     	;# 
   405  1F1D                     	;# 
   406  1F1E                     	;# 
   407  1F1F                     	;# 
   408  1F20                     	;# 
   409  1F21                     	;# 
   410  1F22                     	;# 
   411  1F23                     	;# 
   412  1F24                     	;# 
   413  1F25                     	;# 
   414  1F26                     	;# 
   415  1F27                     	;# 
   416  1F38                     	;# 
   417  1F39                     	;# 
   418  1F3A                     	;# 
   419  1F3B                     	;# 
   420  1F3C                     	;# 
   421  1F3D                     	;# 
   422  1F3E                     	;# 
   423  1F3F                     	;# 
   424  1F43                     	;# 
   425  1F44                     	;# 
   426  1F45                     	;# 
   427  1F46                     	;# 
   428  1F47                     	;# 
   429  1F48                     	;# 
   430  1F49                     	;# 
   431  1F4A                     	;# 
   432  1F4E                     	;# 
   433  1F4F                     	;# 
   434  1F50                     	;# 
   435  1F51                     	;# 
   436  1F52                     	;# 
   437  1F53                     	;# 
   438  1F54                     	;# 
   439  1F55                     	;# 
   440  1FE4                     	;# 
   441  1FE5                     	;# 
   442  1FE6                     	;# 
   443  1FE7                     	;# 
   444  1FE8                     	;# 
   445  1FE8                     	;# 
   446  1FE9                     	;# 
   447  1FEA                     	;# 
   448  1FEB                     	;# 
   449  1FED                     	;# 
   450  1FEE                     	;# 
   451  1FEF                     	;# 
   452  0000                     	;# 
   453  0001                     	;# 
   454  0002                     	;# 
   455  0003                     	;# 
   456  0004                     	;# 
   457  0005                     	;# 
   458  0006                     	;# 
   459  0007                     	;# 
   460  0008                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  0119                     	;# 
   483  011A                     	;# 
   484  011B                     	;# 
   485  011B                     	;# 
   486  011C                     	;# 
   487  011D                     	;# 
   488  011E                     	;# 
   489  011F                     	;# 
   490  018C                     	;# 
   491  018D                     	;# 
   492  018E                     	;# 
   493  018F                     	;# 
   494  0190                     	;# 
   495  0191                     	;# 
   496  0192                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  020E                     	;# 
   500  020E                     	;# 
   501  020F                     	;# 
   502  020F                     	;# 
   503  0210                     	;# 
   504  0210                     	;# 
   505  0211                     	;# 
   506  0211                     	;# 
   507  028C                     	;# 
   508  028C                     	;# 
   509  028D                     	;# 
   510  028D                     	;# 
   511  028E                     	;# 
   512  028F                     	;# 
   513  0290                     	;# 
   514  0291                     	;# 
   515  030C                     	;# 
   516  030C                     	;# 
   517  030D                     	;# 
   518  030E                     	;# 
   519  030F                     	;# 
   520  0310                     	;# 
   521  0310                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0314                     	;# 
   526  0314                     	;# 
   527  0315                     	;# 
   528  0316                     	;# 
   529  0318                     	;# 
   530  0318                     	;# 
   531  0319                     	;# 
   532  031A                     	;# 
   533  059C                     	;# 
   534  059C                     	;# 
   535  059D                     	;# 
   536  059D                     	;# 
   537  059E                     	;# 
   538  059F                     	;# 
   539  070C                     	;# 
   540  070D                     	;# 
   541  070E                     	;# 
   542  0716                     	;# 
   543  0717                     	;# 
   544  0718                     	;# 
   545  080C                     	;# 
   546  0811                     	;# 
   547  0813                     	;# 
   548  0814                     	;# 
   549  081A                     	;# 
   550  081A                     	;# 
   551  081B                     	;# 
   552  081C                     	;# 
   553  081C                     	;# 
   554  081D                     	;# 
   555  081E                     	;# 
   556  081F                     	;# 
   557  088E                     	;# 
   558  0890                     	;# 
   559  0891                     	;# 
   560  0892                     	;# 
   561  0893                     	;# 
   562  090C                     	;# 
   563  1E8F                     	;# 
   564  1E90                     	;# 
   565  1E91                     	;# 
   566  1E92                     	;# 
   567  1E93                     	;# 
   568  1E9C                     	;# 
   569  1EA1                     	;# 
   570  1EA2                     	;# 
   571  1EC3                     	;# 
   572  1EC5                     	;# 
   573  1EC6                     	;# 
   574  1EC7                     	;# 
   575  1ECB                     	;# 
   576  1ECB                     	;# 
   577  1ECB                     	;# 
   578  1ECC                     	;# 
   579  1ECC                     	;# 
   580  1ECC                     	;# 
   581  1F10                     	;# 
   582  1F11                     	;# 
   583  1F12                     	;# 
   584  1F14                     	;# 
   585  1F15                     	;# 
   586  1F1C                     	;# 
   587  1F1D                     	;# 
   588  1F1E                     	;# 
   589  1F1F                     	;# 
   590  1F20                     	;# 
   591  1F21                     	;# 
   592  1F22                     	;# 
   593  1F23                     	;# 
   594  1F24                     	;# 
   595  1F25                     	;# 
   596  1F26                     	;# 
   597  1F27                     	;# 
   598  1F38                     	;# 
   599  1F39                     	;# 
   600  1F3A                     	;# 
   601  1F3B                     	;# 
   602  1F3C                     	;# 
   603  1F3D                     	;# 
   604  1F3E                     	;# 
   605  1F3F                     	;# 
   606  1F43                     	;# 
   607  1F44                     	;# 
   608  1F45                     	;# 
   609  1F46                     	;# 
   610  1F47                     	;# 
   611  1F48                     	;# 
   612  1F49                     	;# 
   613  1F4A                     	;# 
   614  1F4E                     	;# 
   615  1F4F                     	;# 
   616  1F50                     	;# 
   617  1F51                     	;# 
   618  1F52                     	;# 
   619  1F53                     	;# 
   620  1F54                     	;# 
   621  1F55                     	;# 
   622  1FE4                     	;# 
   623  1FE5                     	;# 
   624  1FE6                     	;# 
   625  1FE7                     	;# 
   626  1FE8                     	;# 
   627  1FE8                     	;# 
   628  1FE9                     	;# 
   629  1FEA                     	;# 
   630  1FEB                     	;# 
   631  1FED                     	;# 
   632  1FEE                     	;# 
   633  1FEF                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  009A                     	;# 
   656  009B                     	;# 
   657  009B                     	;# 
   658  009C                     	;# 
   659  009D                     	;# 
   660  009E                     	;# 
   661  009F                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  0119                     	;# 
   665  011A                     	;# 
   666  011B                     	;# 
   667  011B                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  011F                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  018F                     	;# 
   676  0190                     	;# 
   677  0191                     	;# 
   678  0192                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  028C                     	;# 
   690  028C                     	;# 
   691  028D                     	;# 
   692  028D                     	;# 
   693  028E                     	;# 
   694  028F                     	;# 
   695  0290                     	;# 
   696  0291                     	;# 
   697  030C                     	;# 
   698  030C                     	;# 
   699  030D                     	;# 
   700  030E                     	;# 
   701  030F                     	;# 
   702  0310                     	;# 
   703  0310                     	;# 
   704  0311                     	;# 
   705  0312                     	;# 
   706  0313                     	;# 
   707  0314                     	;# 
   708  0314                     	;# 
   709  0315                     	;# 
   710  0316                     	;# 
   711  0318                     	;# 
   712  0318                     	;# 
   713  0319                     	;# 
   714  031A                     	;# 
   715  059C                     	;# 
   716  059C                     	;# 
   717  059D                     	;# 
   718  059D                     	;# 
   719  059E                     	;# 
   720  059F                     	;# 
   721  070C                     	;# 
   722  070D                     	;# 
   723  070E                     	;# 
   724  0716                     	;# 
   725  0717                     	;# 
   726  0718                     	;# 
   727  080C                     	;# 
   728  0811                     	;# 
   729  0813                     	;# 
   730  0814                     	;# 
   731  081A                     	;# 
   732  081A                     	;# 
   733  081B                     	;# 
   734  081C                     	;# 
   735  081C                     	;# 
   736  081D                     	;# 
   737  081E                     	;# 
   738  081F                     	;# 
   739  088E                     	;# 
   740  0890                     	;# 
   741  0891                     	;# 
   742  0892                     	;# 
   743  0893                     	;# 
   744  090C                     	;# 
   745  1E8F                     	;# 
   746  1E90                     	;# 
   747  1E91                     	;# 
   748  1E92                     	;# 
   749  1E93                     	;# 
   750  1E9C                     	;# 
   751  1EA1                     	;# 
   752  1EA2                     	;# 
   753  1EC3                     	;# 
   754  1EC5                     	;# 
   755  1EC6                     	;# 
   756  1EC7                     	;# 
   757  1ECB                     	;# 
   758  1ECB                     	;# 
   759  1ECB                     	;# 
   760  1ECC                     	;# 
   761  1ECC                     	;# 
   762  1ECC                     	;# 
   763  1F10                     	;# 
   764  1F11                     	;# 
   765  1F12                     	;# 
   766  1F14                     	;# 
   767  1F15                     	;# 
   768  1F1C                     	;# 
   769  1F1D                     	;# 
   770  1F1E                     	;# 
   771  1F1F                     	;# 
   772  1F20                     	;# 
   773  1F21                     	;# 
   774  1F22                     	;# 
   775  1F23                     	;# 
   776  1F24                     	;# 
   777  1F25                     	;# 
   778  1F26                     	;# 
   779  1F27                     	;# 
   780  1F38                     	;# 
   781  1F39                     	;# 
   782  1F3A                     	;# 
   783  1F3B                     	;# 
   784  1F3C                     	;# 
   785  1F3D                     	;# 
   786  1F3E                     	;# 
   787  1F3F                     	;# 
   788  1F43                     	;# 
   789  1F44                     	;# 
   790  1F45                     	;# 
   791  1F46                     	;# 
   792  1F47                     	;# 
   793  1F48                     	;# 
   794  1F49                     	;# 
   795  1F4A                     	;# 
   796  1F4E                     	;# 
   797  1F4F                     	;# 
   798  1F50                     	;# 
   799  1F51                     	;# 
   800  1F52                     	;# 
   801  1F53                     	;# 
   802  1F54                     	;# 
   803  1F55                     	;# 
   804  1FE4                     	;# 
   805  1FE5                     	;# 
   806  1FE6                     	;# 
   807  1FE7                     	;# 
   808  1FE8                     	;# 
   809  1FE8                     	;# 
   810  1FE9                     	;# 
   811  1FEA                     	;# 
   812  1FEB                     	;# 
   813  1FED                     	;# 
   814  1FEE                     	;# 
   815  1FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  0012                     	;# 
   832  0013                     	;# 
   833  0014                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  001A                     	;# 
   837  009A                     	;# 
   838  009B                     	;# 
   839  009B                     	;# 
   840  009C                     	;# 
   841  009D                     	;# 
   842  009E                     	;# 
   843  009F                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  0119                     	;# 
   847  011A                     	;# 
   848  011B                     	;# 
   849  011B                     	;# 
   850  011C                     	;# 
   851  011D                     	;# 
   852  011E                     	;# 
   853  011F                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  018E                     	;# 
   857  018F                     	;# 
   858  0190                     	;# 
   859  0191                     	;# 
   860  0192                     	;# 
   861  020C                     	;# 
   862  020D                     	;# 
   863  020E                     	;# 
   864  020E                     	;# 
   865  020F                     	;# 
   866  020F                     	;# 
   867  0210                     	;# 
   868  0210                     	;# 
   869  0211                     	;# 
   870  0211                     	;# 
   871  028C                     	;# 
   872  028C                     	;# 
   873  028D                     	;# 
   874  028D                     	;# 
   875  028E                     	;# 
   876  028F                     	;# 
   877  0290                     	;# 
   878  0291                     	;# 
   879  030C                     	;# 
   880  030C                     	;# 
   881  030D                     	;# 
   882  030E                     	;# 
   883  030F                     	;# 
   884  0310                     	;# 
   885  0310                     	;# 
   886  0311                     	;# 
   887  0312                     	;# 
   888  0313                     	;# 
   889  0314                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0316                     	;# 
   893  0318                     	;# 
   894  0318                     	;# 
   895  0319                     	;# 
   896  031A                     	;# 
   897  059C                     	;# 
   898  059C                     	;# 
   899  059D                     	;# 
   900  059D                     	;# 
   901  059E                     	;# 
   902  059F                     	;# 
   903  070C                     	;# 
   904  070D                     	;# 
   905  070E                     	;# 
   906  0716                     	;# 
   907  0717                     	;# 
   908  0718                     	;# 
   909  080C                     	;# 
   910  0811                     	;# 
   911  0813                     	;# 
   912  0814                     	;# 
   913  081A                     	;# 
   914  081A                     	;# 
   915  081B                     	;# 
   916  081C                     	;# 
   917  081C                     	;# 
   918  081D                     	;# 
   919  081E                     	;# 
   920  081F                     	;# 
   921  088E                     	;# 
   922  0890                     	;# 
   923  0891                     	;# 
   924  0892                     	;# 
   925  0893                     	;# 
   926  090C                     	;# 
   927  1E8F                     	;# 
   928  1E90                     	;# 
   929  1E91                     	;# 
   930  1E92                     	;# 
   931  1E93                     	;# 
   932  1E9C                     	;# 
   933  1EA1                     	;# 
   934  1EA2                     	;# 
   935  1EC3                     	;# 
   936  1EC5                     	;# 
   937  1EC6                     	;# 
   938  1EC7                     	;# 
   939  1ECB                     	;# 
   940  1ECB                     	;# 
   941  1ECB                     	;# 
   942  1ECC                     	;# 
   943  1ECC                     	;# 
   944  1ECC                     	;# 
   945  1F10                     	;# 
   946  1F11                     	;# 
   947  1F12                     	;# 
   948  1F14                     	;# 
   949  1F15                     	;# 
   950  1F1C                     	;# 
   951  1F1D                     	;# 
   952  1F1E                     	;# 
   953  1F1F                     	;# 
   954  1F20                     	;# 
   955  1F21                     	;# 
   956  1F22                     	;# 
   957  1F23                     	;# 
   958  1F24                     	;# 
   959  1F25                     	;# 
   960  1F26                     	;# 
   961  1F27                     	;# 
   962  1F38                     	;# 
   963  1F39                     	;# 
   964  1F3A                     	;# 
   965  1F3B                     	;# 
   966  1F3C                     	;# 
   967  1F3D                     	;# 
   968  1F3E                     	;# 
   969  1F3F                     	;# 
   970  1F43                     	;# 
   971  1F44                     	;# 
   972  1F45                     	;# 
   973  1F46                     	;# 
   974  1F47                     	;# 
   975  1F48                     	;# 
   976  1F49                     	;# 
   977  1F4A                     	;# 
   978  1F4E                     	;# 
   979  1F4F                     	;# 
   980  1F50                     	;# 
   981  1F51                     	;# 
   982  1F52                     	;# 
   983  1F53                     	;# 
   984  1F54                     	;# 
   985  1F55                     	;# 
   986  1FE4                     	;# 
   987  1FE5                     	;# 
   988  1FE6                     	;# 
   989  1FE7                     	;# 
   990  1FE8                     	;# 
   991  1FE8                     	;# 
   992  1FE9                     	;# 
   993  1FEA                     	;# 
   994  1FEB                     	;# 
   995  1FED                     	;# 
   996  1FEE                     	;# 
   997  1FEF                     	;# 
   998                           
   999 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  1000  0000                     
  1001 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  1002  0000                     
  1003 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  1004  0000                     
  1005 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  1006  0000                     
  1007 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  1008  0000                     
  1009 ;; Function _rd1RegCompleteHandler@i2c1_master_example$F143 is unused but had its address taken
  1010  0000                     
  1011 ;; Function _rd2RegCompleteHandler@i2c1_master_example$F154 is unused but had its address taken
  1012  0000                     
  1013 ;; Function _wr1RegCompleteHandler@i2c1_master_example$F160 is unused but had its address taken
  1014  0000                     
  1015 ;; Function _wr2RegCompleteHandler@i2c1_master_example$F166 is unused but had its address taken
  1016  0000                     
  1017 ;; Function _rdBlkRegCompleteHandler@i2c1_master_example$F177 is unused but had its address taken
  1018  0000                     
  1019 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  1020  0000                     
  1021 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  1022  0000                     
  1023 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  1024  0000                     
  1025 ;; Function _I2C1_DO_TX is unused but had its address taken
  1026  0000                     
  1027 ;; Function _I2C1_DO_RX is unused but had its address taken
  1028  0000                     
  1029 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  1030  0000                     
  1031 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  1032  0000                     
  1033 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  1034  0000                     
  1035 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  1036  0000                     
  1037 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  1038  0000                     
  1039 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  1040  0000                     
  1041 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  1042  0000                     
  1043 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  1044  0000                     
  1045 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  1046  0000                     
  1047 ;; Function _I2C1_DO_RESET is unused but had its address taken
  1048  0000                     
  1049 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  1050  0000                     
  1051 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  1052  0000                     
  1053 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  1054  0000                     
  1055                           	psect	idataBANK0
  1056  0419                     __pidataBANK0:
  1057                           
  1058                           ;initializer for _nombres
  1059  0419  345A               	retlw	low (STR_1| (0+32768))
  1060  041A  3488               	retlw	high (STR_1| (0+32768))
  1061  041B  3489               	retlw	low (STR_2| (0+32768))
  1062  041C  3488               	retlw	high (STR_2| (0+32768))
  1063  041D  34A7               	retlw	low (STR_3| (0+32768))
  1064  041E  3488               	retlw	high (STR_3| (0+32768))
  1065  041F  34C3               	retlw	low (STR_4| (0+32768))
  1066  0420  3488               	retlw	high (STR_4| (0+32768))
  1067  0421  3448               	retlw	low (STR_5| (0+32768))
  1068  0422  3488               	retlw	high (STR_5| (0+32768))
  1069  0423  346A               	retlw	low (STR_6| (0+32768))
  1070  0424  3488               	retlw	high (STR_6| (0+32768))
  1071  0425  34CE               	retlw	low (STR_7| (0+32768))
  1072  0426  3488               	retlw	high (STR_7| (0+32768))
  1073  0427  3498               	retlw	low (STR_8| (0+32768))
  1074  0428  3488               	retlw	high (STR_8| (0+32768))
  1075                           
  1076                           ;initializer for _BackLight_State
  1077  0429  3408               	retlw	8
  1078                           
  1079                           ;initializer for _punto
  1080  042A  342E               	retlw	46
  1081                           
  1082                           	psect	stringtext1
  1083  0800                     __pstringtext1:
  1084  0800                     _i2c1_fsmStateTable:
  1085  0800  3400               	retlw	0
  1086  0801  3400               	retlw	0
  1087  0802  3400               	retlw	0
  1088  0803  3400               	retlw	0
  1089  0804  3400               	retlw	0
  1090  0805  3400               	retlw	0
  1091  0806  3400               	retlw	0
  1092  0807  3400               	retlw	0
  1093  0808  3400               	retlw	0
  1094  0809  3400               	retlw	0
  1095  080A  3400               	retlw	0
  1096  080B  3400               	retlw	0
  1097  080C  3400               	retlw	0
  1098  080D  3400               	retlw	0
  1099  080E  3400               	retlw	0
  1100  080F  3400               	retlw	0
  1101  0810  3400               	retlw	0
  1102  0811  3400               	retlw	0
  1103  0812  3400               	retlw	0
  1104  0813  3400               	retlw	0
  1105  0814  3400               	retlw	0
  1106  0815  3400               	retlw	0
  1107  0816  3400               	retlw	0
  1108  0817  3400               	retlw	0
  1109  0818  3400               	retlw	0
  1110  0819  3400               	retlw	0
  1111  081A  3400               	retlw	0
  1112  081B  3400               	retlw	0
  1113  081C  3400               	retlw	0
  1114  081D  3400               	retlw	0
  1115  081E  3400               	retlw	0
  1116  081F  3400               	retlw	0
  1117  0820                     __end_of_i2c1_fsmStateTable:
  1118                           
  1119                           	psect	nvBANK0
  1120  0063                     __pnvBANK0:
  1121  0063                     _i2c_add:
  1122  0063                     	ds	1
  1123  001A                     _LATCbits	set	26
  1124  0019                     _LATBbits	set	25
  1125  000E                     _PORTCbits	set	14
  1126  0018                     _LATAbits	set	24
  1127  0014                     _TRISC	set	20
  1128  0013                     _TRISB	set	19
  1129  0012                     _TRISA	set	18
  1130  001A                     _LATC	set	26
  1131  0019                     _LATB	set	25
  1132  0018                     _LATA	set	24
  1133  009C                     _TRISB4	set	156
  1134  009E                     _TRISB6	set	158
  1135  018F                     _SSP1STATbits	set	399
  1136  0191                     _SSP1CON2bits	set	401
  1137  018C                     _SSP1BUF	set	396
  1138  0190                     _SSP1CON1bits	set	400
  1139  018D                     _SSP1ADD	set	397
  1140  0191                     _SSP1CON2	set	401
  1141  0190                     _SSP1CON1	set	400
  1142  018F                     _SSP1STAT	set	399
  1143  0C8B                     _RCEN	set	3211
  1144  0C8E                     _ACKSTAT	set	3214
  1145  0C8C                     _ACKEN	set	3212
  1146  0C8D                     _ACKDT	set	3213
  1147  0C8A                     _PEN	set	3210
  1148  0C89                     _RSEN	set	3209
  1149  0C88                     _SEN1	set	3208
  1150  0717                     _PIE1bits	set	1815
  1151  070D                     _PIR1bits	set	1805
  1152  3869                     _SSP1IF	set	14441
  1153  080C                     _WDTCON	set	2060
  1154  0892                     _OSCTUNE	set	2194
  1155  0893                     _OSCFRQ	set	2195
  1156  0891                     _OSCEN	set	2193
  1157  1EC6                     _SSP1DATPPS	set	7878
  1158  1EC5                     _SSP1CLKPPS	set	7877
  1159  1F1C                     _RB4PPS	set	7964
  1160  1F1E                     _RB6PPS	set	7966
  1161  1F52                     _INLVLC	set	8018
  1162  1F47                     _INLVLB	set	8007
  1163  1F3C                     _INLVLA	set	7996
  1164  1F51                     _SLRCONC	set	8017
  1165  1F46                     _SLRCONB	set	8006
  1166  1F3B                     _SLRCONA	set	7995
  1167  1F50                     _ODCONC	set	8016
  1168  1F45                     _ODCONB	set	8005
  1169  1F3A                     _ODCONA	set	7994
  1170  1F4F                     _WPUC	set	8015
  1171  1F39                     _WPUA	set	7993
  1172  1F44                     _WPUB	set	8004
  1173  1F38                     _ANSELA	set	7992
  1174  1F43                     _ANSELB	set	8003
  1175  1F4E                     _ANSELC	set	8014
  1176                           
  1177                           	psect	stringtext2
  1178  0820                     __pstringtext2:
  1179  0820                     STR_12:
  1180  0820  344C               	retlw	76	;'L'
  1181  0821  344C               	retlw	76	;'L'
  1182  0822  3461               	retlw	97	;'a'
  1183  0823  346D               	retlw	109	;'m'
  1184  0824  3461               	retlw	97	;'a'
  1185  0825  346E               	retlw	110	;'n'
  1186  0826  3464               	retlw	100	;'d'
  1187  0827  346F               	retlw	111	;'o'
  1188  0828  3420               	retlw	32	;' '
  1189  0829  3461               	retlw	97	;'a'
  1190  082A  346C               	retlw	108	;'l'
  1191  082B  3420               	retlw	32	;' '
  1192  082C  3464               	retlw	100	;'d'
  1193  082D  346F               	retlw	111	;'o'
  1194  082E  3463               	retlw	99	;'c'
  1195  082F  3465               	retlw	101	;'e'
  1196  0830  346E               	retlw	110	;'n'
  1197  0831  3474               	retlw	116	;'t'
  1198  0832  3465               	retlw	101	;'e'
  1199  0833  3400               	retlw	0
  1200                           
  1201                           	psect	stringtext3
  1202  0834                     __pstringtext3:
  1203  0834                     STR_10:
  1204  0834  344C               	retlw	76	;'L'
  1205  0835  3469               	retlw	105	;'i'
  1206  0836  3473               	retlw	115	;'s'
  1207  0837  3474               	retlw	116	;'t'
  1208  0838  3461               	retlw	97	;'a'
  1209  0839  3464               	retlw	100	;'d'
  1210  083A  346F               	retlw	111	;'o'
  1211  083B  3420               	retlw	32	;' '
  1212  083C  3464               	retlw	100	;'d'
  1213  083D  3465               	retlw	101	;'e'
  1214  083E  3420               	retlw	32	;' '
  1215  083F  3464               	retlw	100	;'d'
  1216  0840  346F               	retlw	111	;'o'
  1217  0841  3463               	retlw	99	;'c'
  1218  0842  3465               	retlw	101	;'e'
  1219  0843  346E               	retlw	110	;'n'
  1220  0844  3474               	retlw	116	;'t'
  1221  0845  3465               	retlw	101	;'e'
  1222  0846  3473               	retlw	115	;'s'
  1223  0847  3400               	retlw	0
  1224                           
  1225                           	psect	stringtext4
  1226  0848                     __pstringtext4:
  1227  0848                     STR_5:
  1228  0848  3434               	retlw	52	;'4'
  1229  0849  342E               	retlw	46	;'.'
  1230  084A  344D               	retlw	77	;'M'
  1231  084B  3461               	retlw	97	;'a'
  1232  084C  3475               	retlw	117	;'u'
  1233  084D  3472               	retlw	114	;'r'
  1234  084E  3469               	retlw	105	;'i'
  1235  084F  3463               	retlw	99	;'c'
  1236  0850  3469               	retlw	105	;'i'
  1237  0851  346F               	retlw	111	;'o'
  1238  0852  3420               	retlw	32	;' '
  1239  0853  3456               	retlw	86	;'V'
  1240  0854  3461               	retlw	97	;'a'
  1241  0855  3472               	retlw	114	;'r'
  1242  0856  3467               	retlw	103	;'g'
  1243  0857  3461               	retlw	97	;'a'
  1244  0858  3473               	retlw	115	;'s'
  1245  0859  3400               	retlw	0
  1246                           
  1247                           	psect	stringtext5
  1248  085A                     __pstringtext5:
  1249  085A                     STR_1:
  1250  085A  3430               	retlw	48	;'0'
  1251  085B  342E               	retlw	46	;'.'
  1252  085C  3448               	retlw	72	;'H'
  1253  085D  3461               	retlw	97	;'a'
  1254  085E  3472               	retlw	114	;'r'
  1255  085F  346F               	retlw	111	;'o'
  1256  0860  346C               	retlw	108	;'l'
  1257  0861  3464               	retlw	100	;'d'
  1258  0862  3420               	retlw	32	;' '
  1259  0863  344D               	retlw	77	;'M'
  1260  0864  3475               	retlw	117	;'u'
  1261  0865  3472               	retlw	114	;'r'
  1262  0866  3463               	retlw	99	;'c'
  1263  0867  3469               	retlw	105	;'i'
  1264  0868  3461               	retlw	97	;'a'
  1265  0869  3400               	retlw	0
  1266                           
  1267                           	psect	stringtext6
  1268  086A                     __pstringtext6:
  1269  086A                     STR_6:
  1270  086A  3435               	retlw	53	;'5'
  1271  086B  342E               	retlw	46	;'.'
  1272  086C  344F               	retlw	79	;'O'
  1273  086D  3473               	retlw	115	;'s'
  1274  086E  3463               	retlw	99	;'c'
  1275  086F  3461               	retlw	97	;'a'
  1276  0870  3472               	retlw	114	;'r'
  1277  0871  3420               	retlw	32	;' '
  1278  0872  3442               	retlw	66	;'B'
  1279  0873  3461               	retlw	97	;'a'
  1280  0874  3472               	retlw	114	;'r'
  1281  0875  3472               	retlw	114	;'r'
  1282  0876  3465               	retlw	101	;'e'
  1283  0877  3472               	retlw	114	;'r'
  1284  0878  346F               	retlw	111	;'o'
  1285  0879  3400               	retlw	0
  1286                           
  1287                           	psect	stringtext7
  1288  087A                     __pstringtext7:
  1289  087A                     STR_11:
  1290  087A  3464               	retlw	100	;'d'
  1291  087B  3469               	retlw	105	;'i'
  1292  087C  3473               	retlw	115	;'s'
  1293  087D  3470               	retlw	112	;'p'
  1294  087E  346F               	retlw	111	;'o'
  1295  087F  346E               	retlw	110	;'n'
  1296  0880  3469               	retlw	105	;'i'
  1297  0881  3462               	retlw	98	;'b'
  1298  0882  346C               	retlw	108	;'l'
  1299  0883  3465               	retlw	101	;'e'
  1300  0884  3473               	retlw	115	;'s'
  1301  0885  342E               	retlw	46	;'.'
  1302  0886  342E               	retlw	46	;'.'
  1303  0887  342E               	retlw	46	;'.'
  1304  0888  3400               	retlw	0
  1305                           
  1306                           	psect	stringtext8
  1307  0889                     __pstringtext8:
  1308  0889                     STR_2:
  1309  0889  3431               	retlw	49	;'1'
  1310  088A  342E               	retlw	46	;'.'
  1311  088B  344C               	retlw	76	;'L'
  1312  088C  3475               	retlw	117	;'u'
  1313  088D  347A               	retlw	122	;'z'
  1314  088E  3420               	retlw	32	;' '
  1315  088F  3450               	retlw	80	;'P'
  1316  0890  3461               	retlw	97	;'a'
  1317  0891  3474               	retlw	116	;'t'
  1318  0892  3472               	retlw	114	;'r'
  1319  0893  3469               	retlw	105	;'i'
  1320  0894  3463               	retlw	99	;'c'
  1321  0895  3469               	retlw	105	;'i'
  1322  0896  3461               	retlw	97	;'a'
  1323  0897  3400               	retlw	0
  1324                           
  1325                           	psect	stringtext9
  1326  0898                     __pstringtext9:
  1327  0898                     STR_8:
  1328  0898  3437               	retlw	55	;'7'
  1329  0899  342E               	retlw	46	;'.'
  1330  089A  344A               	retlw	74	;'J'
  1331  089B  346F               	retlw	111	;'o'
  1332  089C  3473               	retlw	115	;'s'
  1333  089D  3465               	retlw	101	;'e'
  1334  089E  3420               	retlw	32	;' '
  1335  089F  3441               	retlw	65	;'A'
  1336  08A0  3472               	retlw	114	;'r'
  1337  08A1  346D               	retlw	109	;'m'
  1338  08A2  3461               	retlw	97	;'a'
  1339  08A3  346E               	retlw	110	;'n'
  1340  08A4  3464               	retlw	100	;'d'
  1341  08A5  346F               	retlw	111	;'o'
  1342  08A6  3400               	retlw	0
  1343                           
  1344                           	psect	stringtext10
  1345  08A7                     __pstringtext10:
  1346  08A7                     STR_3:
  1347  08A7  3432               	retlw	50	;'2'
  1348  08A8  342E               	retlw	46	;'.'
  1349  08A9  3446               	retlw	70	;'F'
  1350  08AA  346C               	retlw	108	;'l'
  1351  08AB  346F               	retlw	111	;'o'
  1352  08AC  3472               	retlw	114	;'r'
  1353  08AD  3420               	retlw	32	;' '
  1354  08AE  3441               	retlw	65	;'A'
  1355  08AF  346E               	retlw	110	;'n'
  1356  08B0  3467               	retlw	103	;'g'
  1357  08B1  3465               	retlw	101	;'e'
  1358  08B2  346C               	retlw	108	;'l'
  1359  08B3  3461               	retlw	97	;'a'
  1360  08B4  3400               	retlw	0
  1361                           
  1362                           	psect	stringtext11
  1363  08B5                     __pstringtext11:
  1364  08B5                     STR_9:
  1365  08B5  3449               	retlw	73	;'I'
  1366  08B6  346E               	retlw	110	;'n'
  1367  08B7  3469               	retlw	105	;'i'
  1368  08B8  3463               	retlw	99	;'c'
  1369  08B9  3469               	retlw	105	;'i'
  1370  08BA  3461               	retlw	97	;'a'
  1371  08BB  346C               	retlw	108	;'l'
  1372  08BC  3469               	retlw	105	;'i'
  1373  08BD  347A               	retlw	122	;'z'
  1374  08BE  3461               	retlw	97	;'a'
  1375  08BF  346E               	retlw	110	;'n'
  1376  08C0  3464               	retlw	100	;'d'
  1377  08C1  346F               	retlw	111	;'o'
  1378  08C2  3400               	retlw	0
  1379                           
  1380                           	psect	stringtext12
  1381  08C3                     __pstringtext12:
  1382  08C3                     STR_4:
  1383  08C3  3433               	retlw	51	;'3'
  1384  08C4  342E               	retlw	46	;'.'
  1385  08C5  344C               	retlw	76	;'L'
  1386  08C6  3475               	retlw	117	;'u'
  1387  08C7  347A               	retlw	122	;'z'
  1388  08C8  3420               	retlw	32	;' '
  1389  08C9  3453               	retlw	83	;'S'
  1390  08CA  3474               	retlw	116	;'t'
  1391  08CB  3465               	retlw	101	;'e'
  1392  08CC  3472               	retlw	114	;'r'
  1393  08CD  3400               	retlw	0
  1394                           
  1395                           	psect	stringtext13
  1396  08CE                     __pstringtext13:
  1397  08CE                     STR_7:
  1398  08CE  3436               	retlw	54	;'6'
  1399  08CF  342E               	retlw	46	;'.'
  1400  08D0  3446               	retlw	70	;'F'
  1401  08D1  3469               	retlw	105	;'i'
  1402  08D2  3474               	retlw	116	;'t'
  1403  08D3  346F               	retlw	111	;'o'
  1404  08D4  3400               	retlw	0
  1405                           
  1406                           	psect	stringtext14
  1407  0000                     __pstringtext14:
  1408                           
  1409                           	psect	cinit
  1410  07E8                     start_initialization:	
  1411                           ; #config settings
  1412                           
  1413  07E8                     __initialization:
  1414                           
  1415                           ; Initialize objects allocated to BANK0
  1416  07E8  3019               	movlw	low __pidataBANK0
  1417  07E9  0084               	movwf	4
  1418  07EA  3084               	movlw	(high __pidataBANK0)| (0+128)
  1419  07EB  0085               	movwf	5
  1420  07EC  3047               	movlw	low __pdataBANK0
  1421  07ED  0086               	movwf	6
  1422  07EE  3000               	movlw	high __pdataBANK0
  1423  07EF  0087               	movwf	7
  1424  07F0  3012               	movlw	18
  1425  07F1  3183  23B4  3187   	fcall	init_ram
  1426                           
  1427                           ; Clear objects allocated to COMMON
  1428  07F4  01FD               	clrf	__pbssCOMMON& (0+127)
  1429                           
  1430                           ; Clear objects allocated to BANK0
  1431  07F5  3020               	movlw	low __pbssBANK0
  1432  07F6  0084               	movwf	4
  1433  07F7  3000               	movlw	high __pbssBANK0
  1434  07F8  0085               	movwf	5
  1435  07F9  3027               	movlw	39
  1436  07FA  3183  23AE  3187   	fcall	clear_ram0
  1437  07FD                     end_of_initialization:	
  1438                           ;End of C runtime variable initialization code
  1439                           
  1440  07FD                     __end_of__initialization:
  1441  07FD  0140               	movlb	0
  1442  07FE  3184  2C08         	ljmp	_main	;jump to C main() function
  1443                           
  1444                           	psect	bssCOMMON
  1445  007D                     __pbssCOMMON:
  1446  007D                     _RS:
  1447  007D                     	ds	1
  1448                           
  1449                           	psect	bssBANK0
  1450  0020                     __pbssBANK0:
  1451  0020                     _I2C1_Status:
  1452  0020                     	ds	29
  1453  003D                     _estadoBotones:
  1454  003D                     	ds	8
  1455  0045                     _clear:
  1456  0045                     	ds	2
  1457                           
  1458                           	psect	dataBANK0
  1459  0047                     __pdataBANK0:
  1460  0047                     _nombres:
  1461  0047                     	ds	16
  1462  0057                     _BackLight_State:
  1463  0057                     	ds	1
  1464  0058                     _punto:
  1465  0058                     	ds	1
  1466                           
  1467                           	psect	inittext
  1468  03B4                     init_ram:
  1469  03B4  00FE               	movwf	btemp
  1470  03B5                     initloop:
  1471  03B5  0012               	moviw fsr0++
  1472  03B6  001E               	movwi fsr1++
  1473  03B7  0BFE               	decfsz	btemp,f
  1474  03B8  2BB5               	goto	initloop
  1475  03B9  3400               	retlw	0
  1476                           
  1477                           	psect	clrtext
  1478  03AE                     clear_ram0:	
  1479                           ;	Called with FSR0 containing the base address, and
  1480                           ;	WREG with the size to clear
  1481                           
  1482  03AE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1483  03AF                     clrloop0:
  1484  03AF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1485  03B0  3101               	addfsr 0,1
  1486  03B1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1487  03B2  2BAF               	goto	clrloop0	;have we reached the end yet?
  1488  03B3  3400               	retlw	0	;all done for this memory range, return
  1489                           
  1490                           	psect	cstackCOMMON
  1491  0070                     __pcstackCOMMON:
  1492  0070                     ?_OSCILLATOR_Initialize:
  1493  0070                     ??_OSCILLATOR_Initialize:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_WDT_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_WDT_Initialize:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_I2C_Master_Init:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ??_I2C_Master_Init:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_LCD_Init:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_LCD_Write_Char:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_LCD_Clear:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_IO_Expander_Write:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_LCD_CMD:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_PIN_MANAGER_Initialize:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_PIN_MANAGER_Initialize:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_I2C1_Initialize:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ??_I2C1_Initialize:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_SYSTEM_Initialize:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ??_SYSTEM_Initialize:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_Inicio:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_pantallaCarga:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_main:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_I2C_Master_Wait:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ??_I2C_Master_Wait:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_I2C_Master_Start:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ??_I2C_Master_Start:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_I2C_Master_Stop:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ??_I2C_Master_Stop:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_I2C_Master_Write:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ??_I2C_Master_Write:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_LCD_Write_4Bit:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     I2C_Master_Write@data:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580                           
  1581                           ; 1 bytes @ 0x0
  1582  0070                     	ds	1
  1583  0071                     ??_IO_Expander_Write:
  1584  0071                     IO_Expander_Write@Data:	
  1585                           ; 1 bytes @ 0x1
  1586                           
  1587                           
  1588                           ; 1 bytes @ 0x1
  1589  0071                     	ds	1
  1590  0072                     ??_LCD_Write_4Bit:
  1591                           
  1592                           ; 1 bytes @ 0x2
  1593  0072                     	ds	1
  1594  0073                     LCD_Write_4Bit@Nibble:
  1595                           
  1596                           ; 1 bytes @ 0x3
  1597  0073                     	ds	1
  1598  0074                     ??_LCD_Write_Char:
  1599  0074                     ??_LCD_CMD:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x4
  1604  0074                     	ds	1
  1605  0075                     LCD_CMD@CMD:
  1606  0075                     LCD_Write_Char@Data:	
  1607                           ; 1 bytes @ 0x5
  1608                           
  1609                           
  1610                           ; 1 bytes @ 0x5
  1611  0075                     	ds	1
  1612  0076                     ??_LCD_Init:
  1613  0076                     ?_LCD_Set_Cursor:	
  1614                           ; 1 bytes @ 0x6
  1615                           
  1616  0076                     ?_LCD_Write_String:	
  1617                           ; 1 bytes @ 0x6
  1618                           
  1619  0076                     ??_LCD_Clear:	
  1620                           ; 1 bytes @ 0x6
  1621                           
  1622  0076                     LCD_Set_Cursor@COL:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625  0076                     LCD_Write_String@Str:	
  1626                           ; 1 bytes @ 0x6
  1627                           
  1628                           
  1629                           ; 2 bytes @ 0x6
  1630  0076                     	ds	1
  1631  0077                     ??_LCD_Set_Cursor:
  1632  0077                     LCD_Init@I2C_Add:	
  1633                           ; 1 bytes @ 0x7
  1634                           
  1635                           
  1636                           ; 1 bytes @ 0x7
  1637  0077                     	ds	1
  1638  0078                     ??_LCD_Write_String:
  1639  0078                     ??_Inicio:	
  1640                           ; 1 bytes @ 0x8
  1641                           
  1642                           
  1643                           ; 1 bytes @ 0x8
  1644  0078                     	ds	1
  1645  0079                     LCD_Set_Cursor@ROW:
  1646  0079                     LCD_Write_String@i:	
  1647                           ; 1 bytes @ 0x9
  1648                           
  1649                           
  1650                           ; 2 bytes @ 0x9
  1651  0079                     	ds	2
  1652  007B                     ??_pantallaCarga:
  1653  007B                     ?_Menu:	
  1654                           ; 1 bytes @ 0xB
  1655                           
  1656  007B                     Menu@entrada:	
  1657                           ; 1 bytes @ 0xB
  1658                           
  1659                           
  1660                           ; 2 bytes @ 0xB
  1661  007B                     	ds	2
  1662  007D                     ??_main:
  1663                           
  1664                           	psect	cstackBANK0
  1665  0059                     __pcstackBANK0:	
  1666                           ; 1 bytes @ 0xD
  1667                           
  1668  0059                     ??_Menu:
  1669  0059                     pantallaCarga@i:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x0
  1674  0059                     	ds	2
  1675  005B                     Menu@i:
  1676                           
  1677                           ; 2 bytes @ 0x2
  1678  005B                     	ds	2
  1679  005D                     Menu@i_1231:
  1680                           
  1681                           ; 2 bytes @ 0x4
  1682  005D                     	ds	2
  1683  005F                     Menu@i_1240:
  1684                           
  1685                           ; 2 bytes @ 0x6
  1686  005F                     	ds	2
  1687  0061                     Menu@i_1241:
  1688                           
  1689                           ; 2 bytes @ 0x8
  1690  0061                     	ds	2
  1691                           
  1692                           	psect	maintext
  1693  0408                     __pmaintext:	
  1694 ;;
  1695 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1696 ;;
  1697 ;; *************** function _main *****************
  1698 ;; Defined at:
  1699 ;;		line 178 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : B3F/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1713 ;;      Params:         0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels required when called: 7
  1719 ;; This function calls:
  1720 ;;		_Inicio
  1721 ;;		_Menu
  1722 ;;		_SYSTEM_Initialize
  1723 ;;		_pantallaCarga
  1724 ;; This function is called by:
  1725 ;;		Startup code after reset
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _main
  1731  0408                     _main:
  1732  0408                     l2754:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1735                           
  1736                           
  1737                           ;main.c: 181:     SYSTEM_Initialize();
  1738  0408  3183  23ED  3184   	fcall	_SYSTEM_Initialize
  1739                           
  1740                           ;main.c: 182:     Inicio();
  1741  040B  3183  23CC  3184   	fcall	_Inicio
  1742  040E                     l2756:
  1743                           
  1744                           ;main.c: 183:     pantallaCarga();
  1745  040E  3184  24F5  3184   	fcall	_pantallaCarga
  1746  0411                     l2758:
  1747                           
  1748                           ;main.c: 184:     Menu(0);
  1749  0411  3000               	movlw	0
  1750  0412  00FB               	movwf	Menu@entrada
  1751  0413  00FC               	movwf	Menu@entrada+1
  1752  0414  3185  25A5  3184   	fcall	_Menu
  1753  0417                     l699:
  1754  0417  3180  2802         	ljmp	start
  1755  0419                     __end_of_main:
  1756                           
  1757                           	psect	text1
  1758  04F5                     __ptext1:	
  1759 ;; *************** function _pantallaCarga *****************
  1760 ;; Defined at:
  1761 ;;		line 16 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  i               2    0[BANK0 ] int 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1775 ;;      Params:         0       0       0       0       0       0       0       0
  1776 ;;      Locals:         0       2       0       0       0       0       0       0
  1777 ;;      Temps:          2       0       0       0       0       0       0       0
  1778 ;;      Totals:         2       2       0       0       0       0       0       0
  1779 ;;Total ram usage:        4 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 6
  1782 ;; This function calls:
  1783 ;;		_LCD_Set_Cursor
  1784 ;;		_LCD_Write_Char
  1785 ;;		_LCD_Write_String
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _pantallaCarga
  1793  04F5                     _pantallaCarga:
  1794  04F5                     l2562:	
  1795                           ;incstack = 0
  1796                           ; Regs used in _pantallaCarga: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1797                           
  1798                           
  1799                           ;main.c: 18:     LCD_Set_Cursor(1, 1);
  1800  04F5  01F6               	clrf	LCD_Set_Cursor@COL
  1801  04F6  0AF6               	incf	LCD_Set_Cursor@COL,f
  1802  04F7  3001               	movlw	1
  1803  04F8  3184  2498  3184   	fcall	_LCD_Set_Cursor
  1804                           
  1805                           ;main.c: 19:     LCD_Write_String("Inicializando");
  1806  04FB  30B5               	movlw	low (STR_9| (0+32768))
  1807  04FC  00F6               	movwf	LCD_Write_String@Str
  1808  04FD  3088               	movlw	high (STR_9| (0+32768))
  1809  04FE  00F7               	movwf	LCD_Write_String@Str+1
  1810  04FF  3184  247B  3184   	fcall	_LCD_Write_String
  1811  0502                     l2564:
  1812                           
  1813                           ;main.c: 21:     for (int i = 14; i < 18; i++)
  1814  0502  300E               	movlw	14
  1815  0503  0140               	movlb	0	; select bank0
  1816  0504  00D9               	movwf	pantallaCarga@i
  1817  0505  3000               	movlw	0
  1818  0506  00DA               	movwf	pantallaCarga@i+1
  1819  0507                     l2570:
  1820                           
  1821                           ;main.c: 22:     {;main.c: 23:         LCD_Set_Cursor(1, i);
  1822  0507  0140               	movlb	0	; select bank0
  1823  0508  0859               	movf	pantallaCarga@i,w
  1824  0509  00FB               	movwf	??_pantallaCarga
  1825  050A  087B               	movf	??_pantallaCarga,w
  1826  050B  00F6               	movwf	LCD_Set_Cursor@COL
  1827  050C  3001               	movlw	1
  1828  050D  3184  2498  3184   	fcall	_LCD_Set_Cursor
  1829  0510                     l2572:
  1830                           
  1831                           ;main.c: 24:         LCD_Write_Char(punto);
  1832  0510  302E               	movlw	46
  1833  0511  3184  2466  3184   	fcall	_LCD_Write_Char
  1834  0514                     l2574:
  1835                           
  1836                           ;main.c: 25:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1837  0514  3006               	movlw	6
  1838  0515  00FC               	movwf	??_pantallaCarga+1
  1839  0516  3013               	movlw	19
  1840  0517  00FB               	movwf	??_pantallaCarga
  1841  0518  30AE               	movlw	174
  1842  0519                     u1087:
  1843  0519  0B89               	decfsz	9,f
  1844  051A  2D19               	goto	u1087
  1845  051B  0BFB               	decfsz	??_pantallaCarga,f
  1846  051C  2D19               	goto	u1087
  1847  051D  0BFC               	decfsz	??_pantallaCarga+1,f
  1848  051E  2D19               	goto	u1087
  1849  051F                     l2576:
  1850                           
  1851                           ;main.c: 26:     }
  1852  051F  3001               	movlw	1
  1853  0520  0140               	movlb	0	; select bank0
  1854  0521  07D9               	addwf	pantallaCarga@i,f
  1855  0522  3000               	movlw	0
  1856  0523  3DDA               	addwfc	pantallaCarga@i+1,f
  1857  0524                     l2578:
  1858  0524  085A               	movf	pantallaCarga@i+1,w
  1859  0525  3A80               	xorlw	128
  1860  0526  00FB               	movwf	??_pantallaCarga
  1861  0527  3080               	movlw	128
  1862  0528  027B               	subwf	??_pantallaCarga,w
  1863  0529  1D03               	skipz
  1864  052A  2D2D               	goto	u835
  1865  052B  3012               	movlw	18
  1866  052C  0259               	subwf	pantallaCarga@i,w
  1867  052D                     u835:
  1868  052D  1C03               	skipc
  1869  052E  2D30               	goto	u831
  1870  052F  2D31               	goto	u830
  1871  0530                     u831:
  1872  0530  2D07               	goto	l2570
  1873  0531                     u830:
  1874  0531                     l655:
  1875  0531  0008               	return
  1876  0532                     __end_of_pantallaCarga:
  1877                           
  1878                           	psect	text2
  1879  03ED                     __ptext2:	
  1880 ;; *************** function _SYSTEM_Initialize *****************
  1881 ;; Defined at:
  1882 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1896 ;;      Params:         0       0       0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		_I2C1_Initialize
  1905 ;;		_OSCILLATOR_Initialize
  1906 ;;		_PIN_MANAGER_Initialize
  1907 ;;		_WDT_Initialize
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _SYSTEM_Initialize
  1915  03ED                     _SYSTEM_Initialize:
  1916  03ED                     l1622:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1919                           
  1920                           
  1921                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  1922  03ED  3183  23C3  3183   	fcall	_I2C1_Initialize
  1923                           
  1924                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1925  03F0  3184  24C6  3183   	fcall	_PIN_MANAGER_Initialize
  1926                           
  1927                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1928  03F3  3183  23A8  3183   	fcall	_OSCILLATOR_Initialize
  1929  03F6                     l1624:
  1930                           
  1931                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  1932  03F6  3183  2399  3183   	fcall	_WDT_Initialize
  1933  03F9                     l607:
  1934  03F9  0008               	return
  1935  03FA                     __end_of_SYSTEM_Initialize:
  1936                           
  1937                           	psect	text3
  1938  0399                     __ptext3:	
  1939 ;; *************** function _WDT_Initialize *****************
  1940 ;; Defined at:
  1941 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1955 ;;      Params:         0       0       0       0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_SYSTEM_Initialize
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _WDT_Initialize
  1970  0399                     _WDT_Initialize:
  1971  0399                     l1450:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _WDT_Initialize: [status,2]
  1974                           
  1975                           
  1976                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x00;
  1977  0399  0150               	movlb	16	; select bank16
  1978  039A  018C               	clrf	12	;volatile
  1979  039B                     l613:
  1980  039B  0008               	return
  1981  039C                     __end_of_WDT_Initialize:
  1982                           
  1983                           	psect	text4
  1984  04C6                     __ptext4:	
  1985 ;; *************** function _PIN_MANAGER_Initialize *****************
  1986 ;; Defined at:
  1987 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2001 ;;      Params:         0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_SYSTEM_Initialize
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _PIN_MANAGER_Initialize
  2016  04C6                     _PIN_MANAGER_Initialize:
  2017  04C6                     l1396:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2020                           
  2021                           
  2022                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2023  04C6  0140               	movlb	0	; select bank0
  2024  04C7  0198               	clrf	24	;volatile
  2025                           
  2026                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2027  04C8  0199               	clrf	25	;volatile
  2028                           
  2029                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2030  04C9  019A               	clrf	26	;volatile
  2031  04CA                     l1398:
  2032                           
  2033                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3B;
  2034  04CA  303B               	movlw	59
  2035  04CB  0092               	movwf	18	;volatile
  2036  04CC                     l1400:
  2037                           
  2038                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  2039  04CC  3070               	movlw	112
  2040  04CD  0093               	movwf	19	;volatile
  2041  04CE                     l1402:
  2042                           
  2043                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1F;
  2044  04CE  301F               	movlw	31
  2045  04CF  0094               	movwf	20	;volatile
  2046  04D0                     l1404:
  2047                           
  2048                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  2049  04D0  017E               	movlb	62	; select bank62
  2050  04D1  01CE               	clrf	78	;volatile
  2051                           
  2052                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  2053  04D2  3020               	movlw	32
  2054  04D3  00C3               	movwf	67	;volatile
  2055                           
  2056                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x33;
  2057  04D4  3033               	movlw	51
  2058  04D5  00B8               	movwf	56	;volatile
  2059  04D6                     l1406:
  2060                           
  2061                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2062  04D6  01C4               	clrf	68	;volatile
  2063  04D7                     l1408:
  2064                           
  2065                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2066  04D7  01B9               	clrf	57	;volatile
  2067                           
  2068                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x05;
  2069  04D8  3005               	movlw	5
  2070  04D9  00CF               	movwf	79	;volatile
  2071  04DA                     l1410:
  2072                           
  2073                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  2074  04DA  01BA               	clrf	58	;volatile
  2075  04DB                     l1412:
  2076                           
  2077                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  2078  04DB  01C5               	clrf	69	;volatile
  2079  04DC                     l1414:
  2080                           
  2081                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  2082  04DC  01D0               	clrf	80	;volatile
  2083  04DD                     l1416:
  2084                           
  2085                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  2086  04DD  3037               	movlw	55
  2087  04DE  00BB               	movwf	59	;volatile
  2088  04DF                     l1418:
  2089                           
  2090                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  2091  04DF  30F0               	movlw	240
  2092  04E0  00C6               	movwf	70	;volatile
  2093  04E1                     l1420:
  2094                           
  2095                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  2096  04E1  30FF               	movlw	255
  2097  04E2  00D1               	movwf	81	;volatile
  2098  04E3                     l1422:
  2099                           
  2100                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  2101  04E3  303F               	movlw	63
  2102  04E4  00BC               	movwf	60	;volatile
  2103  04E5                     l1424:
  2104                           
  2105                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  2106  04E5  30F0               	movlw	240
  2107  04E6  00C7               	movwf	71	;volatile
  2108  04E7                     l1426:
  2109                           
  2110                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  2111  04E7  30FF               	movlw	255
  2112  04E8  00D2               	movwf	82	;volatile
  2113  04E9                     l1428:
  2114                           
  2115                           ;mcc_generated_files/pin_manager.c: 113:     SSP1CLKPPS = 0x0E;
  2116  04E9  300E               	movlw	14
  2117  04EA  017D               	movlb	61	; select bank61
  2118  04EB  00C5               	movwf	69	;volatile
  2119  04EC                     l1430:
  2120                           
  2121                           ;mcc_generated_files/pin_manager.c: 114:     RB6PPS = 0x07;
  2122  04EC  3007               	movlw	7
  2123  04ED  017E               	movlb	62	; select bank62
  2124  04EE  009E               	movwf	30	;volatile
  2125  04EF                     l1432:
  2126                           
  2127                           ;mcc_generated_files/pin_manager.c: 115:     RB4PPS = 0x08;
  2128  04EF  3008               	movlw	8
  2129  04F0  009C               	movwf	28	;volatile
  2130  04F1                     l1434:
  2131                           
  2132                           ;mcc_generated_files/pin_manager.c: 116:     SSP1DATPPS = 0x0C;
  2133  04F1  300C               	movlw	12
  2134  04F2  017D               	movlb	61	; select bank61
  2135  04F3  00C6               	movwf	70	;volatile
  2136  04F4                     l250:
  2137  04F4  0008               	return
  2138  04F5                     __end_of_PIN_MANAGER_Initialize:
  2139                           
  2140                           	psect	text5
  2141  03A8                     __ptext5:	
  2142 ;; *************** function _OSCILLATOR_Initialize *****************
  2143 ;; Defined at:
  2144 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2158 ;;      Params:         0       0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_SYSTEM_Initialize
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _OSCILLATOR_Initialize
  2173  03A8                     _OSCILLATOR_Initialize:
  2174  03A8                     l1444:	
  2175                           ;incstack = 0
  2176                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2177                           
  2178                           
  2179                           ;mcc_generated_files/mcc.c: 62:     OSCEN = 0x00;
  2180  03A8  0151               	movlb	17	; select bank17
  2181  03A9  0191               	clrf	17	;volatile
  2182  03AA                     l1446:
  2183                           
  2184                           ;mcc_generated_files/mcc.c: 64:     OSCFRQ = 0x02;
  2185  03AA  3002               	movlw	2
  2186  03AB  0093               	movwf	19	;volatile
  2187  03AC                     l1448:
  2188                           
  2189                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2190  03AC  0192               	clrf	18	;volatile
  2191  03AD                     l610:
  2192  03AD  0008               	return
  2193  03AE                     __end_of_OSCILLATOR_Initialize:
  2194                           
  2195                           	psect	text6
  2196  03C3                     __ptext6:	
  2197 ;; *************** function _I2C1_Initialize *****************
  2198 ;; Defined at:
  2199 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2213 ;;      Params:         0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_SYSTEM_Initialize
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _I2C1_Initialize
  2228  03C3                     _I2C1_Initialize:
  2229  03C3                     l1436:	
  2230                           ;incstack = 0
  2231                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  2232                           
  2233                           
  2234                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  2235  03C3  0143               	movlb	3	; select bank3
  2236  03C4  018F               	clrf	15	;volatile
  2237  03C5                     l1438:
  2238                           
  2239                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  2240  03C5  3008               	movlw	8
  2241  03C6  0090               	movwf	16	;volatile
  2242  03C7                     l1440:
  2243                           
  2244                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  2245  03C7  0191               	clrf	17	;volatile
  2246                           
  2247                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x09;
  2248  03C8  3009               	movlw	9
  2249  03C9  008D               	movwf	13	;volatile
  2250  03CA                     l1442:
  2251                           
  2252                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  2253  03CA  1290               	bcf	16,5	;volatile
  2254  03CB                     l358:
  2255  03CB  0008               	return
  2256  03CC                     __end_of_I2C1_Initialize:
  2257                           
  2258                           	psect	text7
  2259  05A5                     __ptext7:	
  2260 ;; *************** function _Menu *****************
  2261 ;; Defined at:
  2262 ;;		line 29 in file "main.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  entrada         2   11[COMMON] int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  i               2    8[BANK0 ] int 
  2267 ;;  i               2    6[BANK0 ] int 
  2268 ;;  i               2    4[BANK0 ] int 
  2269 ;;  i               2    2[BANK0 ] int 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2279 ;;      Params:         2       0       0       0       0       0       0       0
  2280 ;;      Locals:         0       8       0       0       0       0       0       0
  2281 ;;      Temps:          0       2       0       0       0       0       0       0
  2282 ;;      Totals:         2      10       0       0       0       0       0       0
  2283 ;;Total ram usage:       12 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 6
  2286 ;; This function calls:
  2287 ;;		_LCD_Clear
  2288 ;;		_LCD_Set_Cursor
  2289 ;;		_LCD_Write_String
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function _Menu
  2297  05A5                     _Menu:
  2298  05A5                     l658:	
  2299                           ;incstack = 0
  2300                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2301                           ;main.c: 29: void Menu(int entrada);main.c: 30: {;main.c: 31:     while (1)
  2302                           
  2303                           
  2304                           ;main.c: 32:     {;main.c: 34:         switch (entrada)
  2305  05A5  2FD7               	goto	l2748
  2306  05A6                     l2580:
  2307                           
  2308                           ;main.c: 38:                 if (clear == 0)
  2309  05A6  0140               	movlb	0	; select bank0
  2310  05A7  0845               	movf	_clear,w
  2311  05A8  0446               	iorwf	_clear+1,w
  2312  05A9  1D03               	btfss	3,2
  2313  05AA  2DAC               	goto	u841
  2314  05AB  2DAD               	goto	u840
  2315  05AC                     u841:
  2316  05AC  2DB5               	goto	l2586
  2317  05AD                     u840:
  2318  05AD                     l2582:
  2319                           
  2320                           ;main.c: 39:                 {;main.c: 40:                     LCD_Clear();
  2321  05AD  3183  23BA  3185   	fcall	_LCD_Clear
  2322  05B0                     l2584:
  2323                           
  2324                           ;main.c: 41:                     clear = 1;
  2325  05B0  3001               	movlw	1
  2326  05B1  0140               	movlb	0	; select bank0
  2327  05B2  00C5               	movwf	_clear
  2328  05B3  3000               	movlw	0
  2329  05B4  00C6               	movwf	_clear+1
  2330  05B5                     l2586:
  2331                           
  2332                           ;main.c: 44:                 LCD_Set_Cursor(1, 1);
  2333  05B5  01F6               	clrf	LCD_Set_Cursor@COL
  2334  05B6  0AF6               	incf	LCD_Set_Cursor@COL,f
  2335  05B7  3001               	movlw	1
  2336  05B8  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2337  05BB                     l2588:
  2338                           
  2339                           ;main.c: 45:                 LCD_Write_String("Listado de docentes");
  2340  05BB  3034               	movlw	low (STR_10| (0+32768))
  2341  05BC  00F6               	movwf	LCD_Write_String@Str
  2342  05BD  3088               	movlw	high (STR_10| (0+32768))
  2343  05BE  00F7               	movwf	LCD_Write_String@Str+1
  2344  05BF  3184  247B  3185   	fcall	_LCD_Write_String
  2345  05C2                     l2590:
  2346                           
  2347                           ;main.c: 46:                 LCD_Set_Cursor(2, 1);
  2348  05C2  01F6               	clrf	LCD_Set_Cursor@COL
  2349  05C3  0AF6               	incf	LCD_Set_Cursor@COL,f
  2350  05C4  3002               	movlw	2
  2351  05C5  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2352  05C8                     l2592:
  2353                           
  2354                           ;main.c: 47:                 LCD_Write_String("disponibles...");
  2355  05C8  307A               	movlw	low (STR_11| (0+32768))
  2356  05C9  00F6               	movwf	LCD_Write_String@Str
  2357  05CA  3088               	movlw	high (STR_11| (0+32768))
  2358  05CB  00F7               	movwf	LCD_Write_String@Str+1
  2359  05CC  3184  247B  3185   	fcall	_LCD_Write_String
  2360  05CF                     l2594:
  2361                           
  2362                           ;main.c: 48:                 _delay((unsigned long)((5000)*(4000000/4000.0)));
  2363  05CF  301A               	movlw	26
  2364  05D0  0140               	movlb	0	; select bank0
  2365  05D1  00DA               	movwf	??_Menu+1
  2366  05D2  305E               	movlw	94
  2367  05D3  00D9               	movwf	??_Menu
  2368  05D4  306E               	movlw	110
  2369  05D5                     u1097:
  2370  05D5  0B89               	decfsz	9,f
  2371  05D6  2DD5               	goto	u1097
  2372  05D7  0BD9               	decfsz	??_Menu,f
  2373  05D8  2DD5               	goto	u1097
  2374  05D9  0BDA               	decfsz	??_Menu+1,f
  2375  05DA  2DD5               	goto	u1097
  2376  05DB  0000               	nop
  2377  05DC                     l2596:
  2378                           
  2379                           ;main.c: 49:                 clear = 0;
  2380  05DC  0140               	movlb	0	; select bank0
  2381  05DD  01C5               	clrf	_clear
  2382  05DE  01C6               	clrf	_clear+1
  2383  05DF                     l2598:
  2384  05DF                     l2600:	
  2385                           ;main.c: 51:                 if (clear == 0)
  2386                           
  2387                           
  2388                           ;main.c: 52:                 {;main.c: 53:                     entrada = 1;
  2389  05DF  3001               	movlw	1
  2390  05E0  00FB               	movwf	Menu@entrada
  2391  05E1  3000               	movlw	0
  2392  05E2  00FC               	movwf	Menu@entrada+1
  2393  05E3  2DA5               	goto	l658
  2394  05E4                     l2602:
  2395                           
  2396                           ;main.c: 60:                 if (clear == 0)
  2397  05E4  0140               	movlb	0	; select bank0
  2398  05E5  0845               	movf	_clear,w
  2399  05E6  0446               	iorwf	_clear+1,w
  2400  05E7  1D03               	btfss	3,2
  2401  05E8  2DEA               	goto	u851
  2402  05E9  2DEB               	goto	u850
  2403  05EA                     u851:
  2404  05EA  2DF3               	goto	l2608
  2405  05EB                     u850:
  2406  05EB                     l2604:
  2407                           
  2408                           ;main.c: 61:                 {;main.c: 62:                     LCD_Clear();
  2409  05EB  3183  23BA  3185   	fcall	_LCD_Clear
  2410  05EE                     l2606:
  2411                           
  2412                           ;main.c: 63:                     clear = 1;
  2413  05EE  3001               	movlw	1
  2414  05EF  0140               	movlb	0	; select bank0
  2415  05F0  00C5               	movwf	_clear
  2416  05F1  3000               	movlw	0
  2417  05F2  00C6               	movwf	_clear+1
  2418  05F3                     l2608:
  2419                           
  2420                           ;main.c: 66:                 LCD_Set_Cursor(1, 1);
  2421  05F3  01F6               	clrf	LCD_Set_Cursor@COL
  2422  05F4  0AF6               	incf	LCD_Set_Cursor@COL,f
  2423  05F5  3001               	movlw	1
  2424  05F6  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2425  05F9                     l2610:
  2426                           
  2427                           ;main.c: 67:                 LCD_Write_String(nombres[0]);
  2428  05F9  0140               	movlb	0	; select bank0
  2429  05FA  0848               	movf	_nombres+1,w
  2430  05FB  00F7               	movwf	LCD_Write_String@Str+1
  2431  05FC  0847               	movf	_nombres,w
  2432  05FD  00F6               	movwf	LCD_Write_String@Str
  2433  05FE  3184  247B  3185   	fcall	_LCD_Write_String
  2434  0601                     l2612:
  2435                           
  2436                           ;main.c: 69:                 LCD_Set_Cursor(2, 1);
  2437  0601  01F6               	clrf	LCD_Set_Cursor@COL
  2438  0602  0AF6               	incf	LCD_Set_Cursor@COL,f
  2439  0603  3002               	movlw	2
  2440  0604  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2441  0607                     l2614:
  2442                           
  2443                           ;main.c: 70:                 LCD_Write_String(nombres[1]);
  2444  0607  0140               	movlb	0	; select bank0
  2445  0608  084A               	movf	(low ((_nombres| 0+2))+1),w
  2446  0609  00F7               	movwf	LCD_Write_String@Str+1
  2447  060A  0849               	movf	low ((_nombres| 0+2)),w
  2448  060B  00F6               	movwf	LCD_Write_String@Str
  2449  060C  3184  247B  3185   	fcall	_LCD_Write_String
  2450  060F                     l2616:
  2451                           
  2452                           ;main.c: 72:                 LCD_Set_Cursor(3, 1);
  2453  060F  01F6               	clrf	LCD_Set_Cursor@COL
  2454  0610  0AF6               	incf	LCD_Set_Cursor@COL,f
  2455  0611  3003               	movlw	3
  2456  0612  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2457  0615                     l2618:
  2458                           
  2459                           ;main.c: 73:                 LCD_Write_String(nombres[2]);
  2460  0615  0140               	movlb	0	; select bank0
  2461  0616  084C               	movf	(low ((_nombres| 0+4))+1),w
  2462  0617  00F7               	movwf	LCD_Write_String@Str+1
  2463  0618  084B               	movf	low ((_nombres| 0+4)),w
  2464  0619  00F6               	movwf	LCD_Write_String@Str
  2465  061A  3184  247B  3185   	fcall	_LCD_Write_String
  2466  061D                     l2620:
  2467                           
  2468                           ;main.c: 75:                 LCD_Set_Cursor(4, 1);
  2469  061D  01F6               	clrf	LCD_Set_Cursor@COL
  2470  061E  0AF6               	incf	LCD_Set_Cursor@COL,f
  2471  061F  3004               	movlw	4
  2472  0620  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2473  0623                     l2622:
  2474                           
  2475                           ;main.c: 76:                 LCD_Write_String(nombres[3]);
  2476  0623  0140               	movlb	0	; select bank0
  2477  0624  084E               	movf	(low ((_nombres| 0+6))+1),w
  2478  0625  00F7               	movwf	LCD_Write_String@Str+1
  2479  0626  084D               	movf	low ((_nombres| 0+6)),w
  2480  0627  00F6               	movwf	LCD_Write_String@Str
  2481  0628  3184  247B  3185   	fcall	_LCD_Write_String
  2482  062B                     l2624:
  2483                           
  2484                           ;main.c: 78:                 if(!PORTCbits.RC0)
  2485  062B  0140               	movlb	0	; select bank0
  2486  062C  180E               	btfsc	14,0	;volatile
  2487  062D  2E2F               	goto	u861
  2488  062E  2E30               	goto	u860
  2489  062F                     u861:
  2490  062F  2E48               	goto	l2632
  2491  0630                     u860:
  2492  0630                     l2626:
  2493                           
  2494                           ;main.c: 79:                 {;main.c: 80:                     estadoBotones[0] = 1;
  2495  0630  3001               	movlw	1
  2496  0631  00BD               	movwf	_estadoBotones
  2497  0632  3000               	movlw	0
  2498  0633  00BE               	movwf	_estadoBotones+1
  2499                           
  2500                           ;main.c: 81:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  2501  0634  3002               	movlw	2
  2502  0635  0140               	movlb	0	; select bank0
  2503  0636  00DA               	movwf	??_Menu+1
  2504  0637  3045               	movlw	69
  2505  0638  00D9               	movwf	??_Menu
  2506  0639  30A9               	movlw	169
  2507  063A                     u1107:
  2508  063A  0B89               	decfsz	9,f
  2509  063B  2E3A               	goto	u1107
  2510  063C  0BD9               	decfsz	??_Menu,f
  2511  063D  2E3A               	goto	u1107
  2512  063E  0BDA               	decfsz	??_Menu+1,f
  2513  063F  2E3A               	goto	u1107
  2514  0640  3200               	nop2
  2515  0641                     l2628:
  2516                           
  2517                           ;main.c: 82:                     clear = 0;
  2518  0641  0140               	movlb	0	; select bank0
  2519  0642  01C5               	clrf	_clear
  2520  0643  01C6               	clrf	_clear+1
  2521  0644                     l2630:
  2522                           
  2523                           ;main.c: 83:                     entrada = 3;
  2524  0644  3003               	movlw	3
  2525  0645  00FB               	movwf	Menu@entrada
  2526  0646  3000               	movlw	0
  2527  0647  00FC               	movwf	Menu@entrada+1
  2528  0648                     l2632:
  2529                           
  2530                           ;main.c: 85:                 if(!PORTCbits.RC1)
  2531  0648  188E               	btfsc	14,1	;volatile
  2532  0649  2E4B               	goto	u871
  2533  064A  2E4C               	goto	u870
  2534  064B                     u871:
  2535  064B  2E64               	goto	l2640
  2536  064C                     u870:
  2537  064C                     l2634:
  2538                           
  2539                           ;main.c: 86:                 {;main.c: 87:                     estadoBotones[1] = 1;
  2540  064C  3001               	movlw	1
  2541  064D  00BF               	movwf	_estadoBotones+2
  2542  064E  3000               	movlw	0
  2543  064F  00C0               	movwf	_estadoBotones+3
  2544                           
  2545                           ;main.c: 88:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  2546  0650  3002               	movlw	2
  2547  0651  0140               	movlb	0	; select bank0
  2548  0652  00DA               	movwf	??_Menu+1
  2549  0653  3045               	movlw	69
  2550  0654  00D9               	movwf	??_Menu
  2551  0655  30A9               	movlw	169
  2552  0656                     u1117:
  2553  0656  0B89               	decfsz	9,f
  2554  0657  2E56               	goto	u1117
  2555  0658  0BD9               	decfsz	??_Menu,f
  2556  0659  2E56               	goto	u1117
  2557  065A  0BDA               	decfsz	??_Menu+1,f
  2558  065B  2E56               	goto	u1117
  2559  065C  3200               	nop2
  2560  065D                     l2636:
  2561                           
  2562                           ;main.c: 89:                     clear = 0;
  2563  065D  0140               	movlb	0	; select bank0
  2564  065E  01C5               	clrf	_clear
  2565  065F  01C6               	clrf	_clear+1
  2566  0660                     l2638:
  2567                           
  2568                           ;main.c: 90:                     entrada = 3;
  2569  0660  3003               	movlw	3
  2570  0661  00FB               	movwf	Menu@entrada
  2571  0662  3000               	movlw	0
  2572  0663  00FC               	movwf	Menu@entrada+1
  2573  0664                     l2640:
  2574                           
  2575                           ;main.c: 92:                 if(!PORTCbits.RC3)
  2576  0664  198E               	btfsc	14,3	;volatile
  2577  0665  2E67               	goto	u881
  2578  0666  2E68               	goto	u880
  2579  0667                     u881:
  2580  0667  2E80               	goto	l2648
  2581  0668                     u880:
  2582  0668                     l2642:
  2583                           
  2584                           ;main.c: 93:                 {;main.c: 94:                     estadoBotones[2] = 1;
  2585  0668  3001               	movlw	1
  2586  0669  00C1               	movwf	_estadoBotones+4
  2587  066A  3000               	movlw	0
  2588  066B  00C2               	movwf	_estadoBotones+5
  2589                           
  2590                           ;main.c: 95:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  2591  066C  3002               	movlw	2
  2592  066D  0140               	movlb	0	; select bank0
  2593  066E  00DA               	movwf	??_Menu+1
  2594  066F  3045               	movlw	69
  2595  0670  00D9               	movwf	??_Menu
  2596  0671  30A9               	movlw	169
  2597  0672                     u1127:
  2598  0672  0B89               	decfsz	9,f
  2599  0673  2E72               	goto	u1127
  2600  0674  0BD9               	decfsz	??_Menu,f
  2601  0675  2E72               	goto	u1127
  2602  0676  0BDA               	decfsz	??_Menu+1,f
  2603  0677  2E72               	goto	u1127
  2604  0678  3200               	nop2
  2605  0679                     l2644:
  2606                           
  2607                           ;main.c: 96:                     clear = 0;
  2608  0679  0140               	movlb	0	; select bank0
  2609  067A  01C5               	clrf	_clear
  2610  067B  01C6               	clrf	_clear+1
  2611  067C                     l2646:
  2612                           
  2613                           ;main.c: 97:                     entrada = 3;
  2614  067C  3003               	movlw	3
  2615  067D  00FB               	movwf	Menu@entrada
  2616  067E  3000               	movlw	0
  2617  067F  00FC               	movwf	Menu@entrada+1
  2618  0680                     l2648:
  2619                           
  2620                           ;main.c: 99:                 if(!PORTCbits.RC4)
  2621  0680  1A0E               	btfsc	14,4	;volatile
  2622  0681  2E83               	goto	u891
  2623  0682  2E84               	goto	u890
  2624  0683                     u891:
  2625  0683  2DA5               	goto	l658
  2626  0684                     u890:
  2627  0684                     l2650:
  2628                           
  2629                           ;main.c: 100:                 {;main.c: 101:                     estadoBotones[3] = 1;
  2630  0684  3001               	movlw	1
  2631  0685  00C3               	movwf	_estadoBotones+6
  2632  0686  3000               	movlw	0
  2633  0687  00C4               	movwf	_estadoBotones+7
  2634                           
  2635                           ;main.c: 102:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  2636  0688  3002               	movlw	2
  2637  0689  0140               	movlb	0	; select bank0
  2638  068A  00DA               	movwf	??_Menu+1
  2639  068B  3045               	movlw	69
  2640  068C  00D9               	movwf	??_Menu
  2641  068D  30A9               	movlw	169
  2642  068E                     u1137:
  2643  068E  0B89               	decfsz	9,f
  2644  068F  2E8E               	goto	u1137
  2645  0690  0BD9               	decfsz	??_Menu,f
  2646  0691  2E8E               	goto	u1137
  2647  0692  0BDA               	decfsz	??_Menu+1,f
  2648  0693  2E8E               	goto	u1137
  2649  0694  3200               	nop2
  2650  0695                     l2652:
  2651                           
  2652                           ;main.c: 103:                     clear = 0;
  2653  0695  0140               	movlb	0	; select bank0
  2654  0696  01C5               	clrf	_clear
  2655  0697  01C6               	clrf	_clear+1
  2656  0698                     l2654:
  2657                           
  2658                           ;main.c: 104:                     entrada = 3;
  2659  0698  3003               	movlw	3
  2660  0699  00FB               	movwf	Menu@entrada
  2661  069A  3000               	movlw	0
  2662  069B  00FC               	movwf	Menu@entrada+1
  2663  069C  2DA5               	goto	l658
  2664  069D                     l2656:
  2665                           
  2666                           ;main.c: 111:                 if (clear == 0)
  2667  069D  0140               	movlb	0	; select bank0
  2668  069E  0845               	movf	_clear,w
  2669  069F  0446               	iorwf	_clear+1,w
  2670  06A0  1D03               	btfss	3,2
  2671  06A1  2EA3               	goto	u901
  2672  06A2  2EA4               	goto	u900
  2673  06A3                     u901:
  2674  06A3  2EAC               	goto	l2662
  2675  06A4                     u900:
  2676  06A4                     l2658:
  2677                           
  2678                           ;main.c: 112:                 {;main.c: 113:                     LCD_Clear();
  2679  06A4  3183  23BA  3185   	fcall	_LCD_Clear
  2680  06A7                     l2660:
  2681                           
  2682                           ;main.c: 114:                     clear = 1;
  2683  06A7  3001               	movlw	1
  2684  06A8  0140               	movlb	0	; select bank0
  2685  06A9  00C5               	movwf	_clear
  2686  06AA  3000               	movlw	0
  2687  06AB  00C6               	movwf	_clear+1
  2688  06AC                     l2662:
  2689                           
  2690                           ;main.c: 117:                 LCD_Set_Cursor(1, 1);
  2691  06AC  01F6               	clrf	LCD_Set_Cursor@COL
  2692  06AD  0AF6               	incf	LCD_Set_Cursor@COL,f
  2693  06AE  3001               	movlw	1
  2694  06AF  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2695  06B2                     l2664:
  2696                           
  2697                           ;main.c: 118:                 LCD_Write_String("LLamando al docente");
  2698  06B2  3020               	movlw	low (STR_12| (0+32768))
  2699  06B3  00F6               	movwf	LCD_Write_String@Str
  2700  06B4  3088               	movlw	high (STR_12| (0+32768))
  2701  06B5  00F7               	movwf	LCD_Write_String@Str+1
  2702  06B6  3184  247B  3185   	fcall	_LCD_Write_String
  2703  06B9                     l2666:
  2704                           
  2705                           ;main.c: 120:                 if(estadoBotones[0] == 1)
  2706  06B9  0140               	movlb	0	; select bank0
  2707  06BA  033D               	decf	_estadoBotones,w
  2708  06BB  043E               	iorwf	_estadoBotones+1,w
  2709  06BC  1D03               	btfss	3,2
  2710  06BD  2EBF               	goto	u911
  2711  06BE  2EC0               	goto	u910
  2712  06BF                     u911:
  2713  06BF  2F01               	goto	l2686
  2714  06C0                     u910:
  2715  06C0                     l2668:
  2716                           
  2717                           ;main.c: 121:                 {;main.c: 122:                     LCD_Set_Cursor(2, 1);
  2718  06C0  01F6               	clrf	LCD_Set_Cursor@COL
  2719  06C1  0AF6               	incf	LCD_Set_Cursor@COL,f
  2720  06C2  3002               	movlw	2
  2721  06C3  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2722                           
  2723                           ;main.c: 123:                     LCD_Write_String(nombres[0]);
  2724  06C6  0140               	movlb	0	; select bank0
  2725  06C7  0848               	movf	_nombres+1,w
  2726  06C8  00F7               	movwf	LCD_Write_String@Str+1
  2727  06C9  0847               	movf	_nombres,w
  2728  06CA  00F6               	movwf	LCD_Write_String@Str
  2729  06CB  3184  247B  3185   	fcall	_LCD_Write_String
  2730  06CE                     l2670:
  2731                           
  2732                           ;main.c: 125:                     for (int i = 0; i < 10; i++)
  2733  06CE  0140               	movlb	0	; select bank0
  2734  06CF  01DB               	clrf	Menu@i
  2735  06D0  01DC               	clrf	Menu@i+1
  2736  06D1                     l2676:
  2737  06D1  1003               	clrc
  2738  06D2  0140               	movlb	0	; select bank0
  2739  06D3  1F99               	btfss	25,7	;volatile
  2740  06D4  1403               	setc
  2741  06D5  1803               	btfsc	3,0
  2742  06D6  2ED8               	goto	u921
  2743  06D7  2EDB               	goto	u920
  2744  06D8                     u921:
  2745  06D8  0140               	movlb	0	; select bank0
  2746  06D9  1799               	bsf	25,7	;volatile
  2747  06DA  2EDD               	goto	u934
  2748  06DB                     u920:
  2749  06DB  0140               	movlb	0	; select bank0
  2750  06DC  1399               	bcf	25,7	;volatile
  2751  06DD                     u934:
  2752  06DD                     l2678:
  2753                           
  2754                           ;main.c: 128:                         _delay((unsigned long)((250)*(4000000/4000.0)));
  2755  06DD  3002               	movlw	2
  2756  06DE  0140               	movlb	0	; select bank0
  2757  06DF  00DA               	movwf	??_Menu+1
  2758  06E0  3045               	movlw	69
  2759  06E1  00D9               	movwf	??_Menu
  2760  06E2  30A9               	movlw	169
  2761  06E3                     u1147:
  2762  06E3  0B89               	decfsz	9,f
  2763  06E4  2EE3               	goto	u1147
  2764  06E5  0BD9               	decfsz	??_Menu,f
  2765  06E6  2EE3               	goto	u1147
  2766  06E7  0BDA               	decfsz	??_Menu+1,f
  2767  06E8  2EE3               	goto	u1147
  2768  06E9  3200               	nop2
  2769  06EA                     l2680:
  2770                           
  2771                           ;main.c: 129:                     }
  2772  06EA  3001               	movlw	1
  2773  06EB  0140               	movlb	0	; select bank0
  2774  06EC  07DB               	addwf	Menu@i,f
  2775  06ED  3000               	movlw	0
  2776  06EE  3DDC               	addwfc	Menu@i+1,f
  2777  06EF                     l2682:
  2778  06EF  085C               	movf	Menu@i+1,w
  2779  06F0  3A80               	xorlw	128
  2780  06F1  00D9               	movwf	??_Menu
  2781  06F2  3080               	movlw	128
  2782  06F3  0259               	subwf	??_Menu,w
  2783  06F4  1D03               	skipz
  2784  06F5  2EF8               	goto	u945
  2785  06F6  300A               	movlw	10
  2786  06F7  025B               	subwf	Menu@i,w
  2787  06F8                     u945:
  2788  06F8  1C03               	skipc
  2789  06F9  2EFB               	goto	u941
  2790  06FA  2EFC               	goto	u940
  2791  06FB                     u941:
  2792  06FB  2ED1               	goto	l2676
  2793  06FC                     u940:
  2794  06FC                     l2684:
  2795                           
  2796                           ;main.c: 130:                     estadoBotones[0] = 0;
  2797  06FC  0140               	movlb	0	; select bank0
  2798  06FD  01BD               	clrf	_estadoBotones
  2799  06FE  01BE               	clrf	_estadoBotones+1
  2800                           
  2801                           ;main.c: 131:                     entrada = 0;
  2802  06FF  01FB               	clrf	Menu@entrada
  2803  0700  01FC               	clrf	Menu@entrada+1
  2804  0701                     l2686:
  2805                           
  2806                           ;main.c: 133:                 if(estadoBotones[1] == 1)
  2807  0701  033F               	decf	_estadoBotones+2,w
  2808  0702  0440               	iorwf	_estadoBotones+3,w
  2809  0703  1D03               	btfss	3,2
  2810  0704  2F06               	goto	u951
  2811  0705  2F07               	goto	u950
  2812  0706                     u951:
  2813  0706  2F48               	goto	l2706
  2814  0707                     u950:
  2815  0707                     l2688:
  2816                           
  2817                           ;main.c: 134:                 {;main.c: 135:                     LCD_Set_Cursor(2, 1);
  2818  0707  01F6               	clrf	LCD_Set_Cursor@COL
  2819  0708  0AF6               	incf	LCD_Set_Cursor@COL,f
  2820  0709  3002               	movlw	2
  2821  070A  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2822                           
  2823                           ;main.c: 136:                     LCD_Write_String(nombres[1]);
  2824  070D  0140               	movlb	0	; select bank0
  2825  070E  084A               	movf	(low ((_nombres| 0+2))+1),w
  2826  070F  00F7               	movwf	LCD_Write_String@Str+1
  2827  0710  0849               	movf	low ((_nombres| 0+2)),w
  2828  0711  00F6               	movwf	LCD_Write_String@Str
  2829  0712  3184  247B  3185   	fcall	_LCD_Write_String
  2830  0715                     l2690:
  2831                           
  2832                           ;main.c: 138:                     for (int i = 0; i < 10; i++)
  2833  0715  0140               	movlb	0	; select bank0
  2834  0716  01DD               	clrf	Menu@i_1231
  2835  0717  01DE               	clrf	Menu@i_1231+1
  2836  0718                     l2696:
  2837  0718  1003               	clrc
  2838  0719  0140               	movlb	0	; select bank0
  2839  071A  1E9A               	btfss	26,5	;volatile
  2840  071B  1403               	setc
  2841  071C  1803               	btfsc	3,0
  2842  071D  2F1F               	goto	u961
  2843  071E  2F22               	goto	u960
  2844  071F                     u961:
  2845  071F  0140               	movlb	0	; select bank0
  2846  0720  169A               	bsf	26,5	;volatile
  2847  0721  2F24               	goto	u974
  2848  0722                     u960:
  2849  0722  0140               	movlb	0	; select bank0
  2850  0723  129A               	bcf	26,5	;volatile
  2851  0724                     u974:
  2852  0724                     l2698:
  2853                           
  2854                           ;main.c: 141:                         _delay((unsigned long)((250)*(4000000/4000.0)));
  2855  0724  3002               	movlw	2
  2856  0725  0140               	movlb	0	; select bank0
  2857  0726  00DA               	movwf	??_Menu+1
  2858  0727  3045               	movlw	69
  2859  0728  00D9               	movwf	??_Menu
  2860  0729  30A9               	movlw	169
  2861  072A                     u1157:
  2862  072A  0B89               	decfsz	9,f
  2863  072B  2F2A               	goto	u1157
  2864  072C  0BD9               	decfsz	??_Menu,f
  2865  072D  2F2A               	goto	u1157
  2866  072E  0BDA               	decfsz	??_Menu+1,f
  2867  072F  2F2A               	goto	u1157
  2868  0730  3200               	nop2
  2869  0731                     l2700:
  2870                           
  2871                           ;main.c: 142:                     }
  2872  0731  3001               	movlw	1
  2873  0732  0140               	movlb	0	; select bank0
  2874  0733  07DD               	addwf	Menu@i_1231,f
  2875  0734  3000               	movlw	0
  2876  0735  3DDE               	addwfc	Menu@i_1231+1,f
  2877  0736                     l2702:
  2878  0736  085E               	movf	Menu@i_1231+1,w
  2879  0737  3A80               	xorlw	128
  2880  0738  00D9               	movwf	??_Menu
  2881  0739  3080               	movlw	128
  2882  073A  0259               	subwf	??_Menu,w
  2883  073B  1D03               	skipz
  2884  073C  2F3F               	goto	u985
  2885  073D  300A               	movlw	10
  2886  073E  025D               	subwf	Menu@i_1231,w
  2887  073F                     u985:
  2888  073F  1C03               	skipc
  2889  0740  2F42               	goto	u981
  2890  0741  2F43               	goto	u980
  2891  0742                     u981:
  2892  0742  2F18               	goto	l2696
  2893  0743                     u980:
  2894  0743                     l2704:
  2895                           
  2896                           ;main.c: 143:                     estadoBotones[1] = 0;
  2897  0743  0140               	movlb	0	; select bank0
  2898  0744  01BF               	clrf	_estadoBotones+2
  2899  0745  01C0               	clrf	_estadoBotones+3
  2900                           
  2901                           ;main.c: 144:                     entrada = 0;
  2902  0746  01FB               	clrf	Menu@entrada
  2903  0747  01FC               	clrf	Menu@entrada+1
  2904  0748                     l2706:
  2905                           
  2906                           ;main.c: 146:                 if(estadoBotones[2] == 1)
  2907  0748  0341               	decf	_estadoBotones+4,w
  2908  0749  0442               	iorwf	_estadoBotones+5,w
  2909  074A  1D03               	btfss	3,2
  2910  074B  2F4D               	goto	u991
  2911  074C  2F4E               	goto	u990
  2912  074D                     u991:
  2913  074D  2F8F               	goto	l2726
  2914  074E                     u990:
  2915  074E                     l2708:
  2916                           
  2917                           ;main.c: 147:                 {;main.c: 148:                     LCD_Set_Cursor(2, 1);
  2918  074E  01F6               	clrf	LCD_Set_Cursor@COL
  2919  074F  0AF6               	incf	LCD_Set_Cursor@COL,f
  2920  0750  3002               	movlw	2
  2921  0751  3184  2498  3185   	fcall	_LCD_Set_Cursor
  2922                           
  2923                           ;main.c: 149:                     LCD_Write_String(nombres[2]);
  2924  0754  0140               	movlb	0	; select bank0
  2925  0755  084C               	movf	(low ((_nombres| 0+4))+1),w
  2926  0756  00F7               	movwf	LCD_Write_String@Str+1
  2927  0757  084B               	movf	low ((_nombres| 0+4)),w
  2928  0758  00F6               	movwf	LCD_Write_String@Str
  2929  0759  3184  247B  3185   	fcall	_LCD_Write_String
  2930  075C                     l2710:
  2931                           
  2932                           ;main.c: 151:                     for (int i = 0; i < 10; i++)
  2933  075C  0140               	movlb	0	; select bank0
  2934  075D  01DF               	clrf	Menu@i_1240
  2935  075E  01E0               	clrf	Menu@i_1240+1
  2936  075F                     l2716:
  2937  075F  1003               	clrc
  2938  0760  0140               	movlb	0	; select bank0
  2939  0761  1F1A               	btfss	26,6	;volatile
  2940  0762  1403               	setc
  2941  0763  1803               	btfsc	3,0
  2942  0764  2F66               	goto	u1001
  2943  0765  2F69               	goto	u1000
  2944  0766                     u1001:
  2945  0766  0140               	movlb	0	; select bank0
  2946  0767  171A               	bsf	26,6	;volatile
  2947  0768  2F6B               	goto	u1014
  2948  0769                     u1000:
  2949  0769  0140               	movlb	0	; select bank0
  2950  076A  131A               	bcf	26,6	;volatile
  2951  076B                     u1014:
  2952  076B                     l2718:
  2953                           
  2954                           ;main.c: 154:                         _delay((unsigned long)((250)*(4000000/4000.0)));
  2955  076B  3002               	movlw	2
  2956  076C  0140               	movlb	0	; select bank0
  2957  076D  00DA               	movwf	??_Menu+1
  2958  076E  3045               	movlw	69
  2959  076F  00D9               	movwf	??_Menu
  2960  0770  30A9               	movlw	169
  2961  0771                     u1167:
  2962  0771  0B89               	decfsz	9,f
  2963  0772  2F71               	goto	u1167
  2964  0773  0BD9               	decfsz	??_Menu,f
  2965  0774  2F71               	goto	u1167
  2966  0775  0BDA               	decfsz	??_Menu+1,f
  2967  0776  2F71               	goto	u1167
  2968  0777  3200               	nop2
  2969  0778                     l2720:
  2970                           
  2971                           ;main.c: 155:                     }
  2972  0778  3001               	movlw	1
  2973  0779  0140               	movlb	0	; select bank0
  2974  077A  07DF               	addwf	Menu@i_1240,f
  2975  077B  3000               	movlw	0
  2976  077C  3DE0               	addwfc	Menu@i_1240+1,f
  2977  077D                     l2722:
  2978  077D  0860               	movf	Menu@i_1240+1,w
  2979  077E  3A80               	xorlw	128
  2980  077F  00D9               	movwf	??_Menu
  2981  0780  3080               	movlw	128
  2982  0781  0259               	subwf	??_Menu,w
  2983  0782  1D03               	skipz
  2984  0783  2F86               	goto	u1025
  2985  0784  300A               	movlw	10
  2986  0785  025F               	subwf	Menu@i_1240,w
  2987  0786                     u1025:
  2988  0786  1C03               	skipc
  2989  0787  2F89               	goto	u1021
  2990  0788  2F8A               	goto	u1020
  2991  0789                     u1021:
  2992  0789  2F5F               	goto	l2716
  2993  078A                     u1020:
  2994  078A                     l2724:
  2995                           
  2996                           ;main.c: 156:                     estadoBotones[2] = 0;
  2997  078A  0140               	movlb	0	; select bank0
  2998  078B  01C1               	clrf	_estadoBotones+4
  2999  078C  01C2               	clrf	_estadoBotones+5
  3000                           
  3001                           ;main.c: 157:                     entrada = 0;
  3002  078D  01FB               	clrf	Menu@entrada
  3003  078E  01FC               	clrf	Menu@entrada+1
  3004  078F                     l2726:
  3005                           
  3006                           ;main.c: 159:                 if(estadoBotones[3] == 1)
  3007  078F  0343               	decf	_estadoBotones+6,w
  3008  0790  0444               	iorwf	_estadoBotones+7,w
  3009  0791  1D03               	btfss	3,2
  3010  0792  2F94               	goto	u1031
  3011  0793  2F95               	goto	u1030
  3012  0794                     u1031:
  3013  0794  2DA5               	goto	l658
  3014  0795                     u1030:
  3015  0795                     l2728:
  3016                           
  3017                           ;main.c: 160:                 {;main.c: 161:                     LCD_Set_Cursor(2, 1);
  3018  0795  01F6               	clrf	LCD_Set_Cursor@COL
  3019  0796  0AF6               	incf	LCD_Set_Cursor@COL,f
  3020  0797  3002               	movlw	2
  3021  0798  3184  2498  3185   	fcall	_LCD_Set_Cursor
  3022                           
  3023                           ;main.c: 162:                     LCD_Write_String(nombres[3]);
  3024  079B  0140               	movlb	0	; select bank0
  3025  079C  084E               	movf	(low ((_nombres| 0+6))+1),w
  3026  079D  00F7               	movwf	LCD_Write_String@Str+1
  3027  079E  084D               	movf	low ((_nombres| 0+6)),w
  3028  079F  00F6               	movwf	LCD_Write_String@Str
  3029  07A0  3184  247B  3185   	fcall	_LCD_Write_String
  3030  07A3                     l2730:
  3031                           
  3032                           ;main.c: 164:                     for (int i = 0; i < 10; i++)
  3033  07A3  0140               	movlb	0	; select bank0
  3034  07A4  01E1               	clrf	Menu@i_1241
  3035  07A5  01E2               	clrf	Menu@i_1241+1
  3036  07A6                     l2736:
  3037  07A6  1003               	clrc
  3038  07A7  0140               	movlb	0	; select bank0
  3039  07A8  1F9A               	btfss	26,7	;volatile
  3040  07A9  1403               	setc
  3041  07AA  1803               	btfsc	3,0
  3042  07AB  2FAD               	goto	u1041
  3043  07AC  2FB0               	goto	u1040
  3044  07AD                     u1041:
  3045  07AD  0140               	movlb	0	; select bank0
  3046  07AE  179A               	bsf	26,7	;volatile
  3047  07AF  2FB2               	goto	u1054
  3048  07B0                     u1040:
  3049  07B0  0140               	movlb	0	; select bank0
  3050  07B1  139A               	bcf	26,7	;volatile
  3051  07B2                     u1054:
  3052  07B2                     l2738:
  3053                           
  3054                           ;main.c: 167:                         _delay((unsigned long)((250)*(4000000/4000.0)));
  3055  07B2  3002               	movlw	2
  3056  07B3  0140               	movlb	0	; select bank0
  3057  07B4  00DA               	movwf	??_Menu+1
  3058  07B5  3045               	movlw	69
  3059  07B6  00D9               	movwf	??_Menu
  3060  07B7  30A9               	movlw	169
  3061  07B8                     u1177:
  3062  07B8  0B89               	decfsz	9,f
  3063  07B9  2FB8               	goto	u1177
  3064  07BA  0BD9               	decfsz	??_Menu,f
  3065  07BB  2FB8               	goto	u1177
  3066  07BC  0BDA               	decfsz	??_Menu+1,f
  3067  07BD  2FB8               	goto	u1177
  3068  07BE  3200               	nop2
  3069  07BF                     l2740:
  3070                           
  3071                           ;main.c: 168:                     }
  3072  07BF  3001               	movlw	1
  3073  07C0  0140               	movlb	0	; select bank0
  3074  07C1  07E1               	addwf	Menu@i_1241,f
  3075  07C2  3000               	movlw	0
  3076  07C3  3DE2               	addwfc	Menu@i_1241+1,f
  3077  07C4                     l2742:
  3078  07C4  0862               	movf	Menu@i_1241+1,w
  3079  07C5  3A80               	xorlw	128
  3080  07C6  00D9               	movwf	??_Menu
  3081  07C7  3080               	movlw	128
  3082  07C8  0259               	subwf	??_Menu,w
  3083  07C9  1D03               	skipz
  3084  07CA  2FCD               	goto	u1065
  3085  07CB  300A               	movlw	10
  3086  07CC  0261               	subwf	Menu@i_1241,w
  3087  07CD                     u1065:
  3088  07CD  1C03               	skipc
  3089  07CE  2FD0               	goto	u1061
  3090  07CF  2FD1               	goto	u1060
  3091  07D0                     u1061:
  3092  07D0  2FA6               	goto	l2736
  3093  07D1                     u1060:
  3094  07D1                     l2744:
  3095                           
  3096                           ;main.c: 169:                     estadoBotones[3] = 0;
  3097  07D1  0140               	movlb	0	; select bank0
  3098  07D2  01C3               	clrf	_estadoBotones+6
  3099  07D3  01C4               	clrf	_estadoBotones+7
  3100                           
  3101                           ;main.c: 170:                     entrada = 0;
  3102  07D4  01FB               	clrf	Menu@entrada
  3103  07D5  01FC               	clrf	Menu@entrada+1
  3104  07D6  2DA5               	goto	l658
  3105  07D7                     l2748:
  3106                           
  3107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3108                           ; Switch size 1, requested type "simple"
  3109                           ; Number of cases is 1, Range of values is 0 to 0
  3110                           ; switch strategies available:
  3111                           ; Name         Instructions Cycles
  3112                           ; simple_byte            4     3 (average)
  3113                           ; direct_byte            8     6 (fixed)
  3114                           ; jumptable            260     6 (fixed)
  3115                           ;	Chosen strategy is simple_byte
  3116  07D7  087C               	movf	Menu@entrada+1,w
  3117  07D8  3A00               	xorlw	0	; case 0
  3118  07D9  1903               	skipnz
  3119  07DA  2FDC               	goto	l2842
  3120  07DB  2DA5               	goto	l658
  3121  07DC                     l2842:
  3122                           
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 3
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ; direct_byte           14     6 (fixed)
  3129                           ; jumptable            260     6 (fixed)
  3130                           ;	Chosen strategy is simple_byte
  3131  07DC  087B               	movf	Menu@entrada,w
  3132  07DD  3A00               	xorlw	0	; case 0
  3133  07DE  1903               	skipnz
  3134  07DF  2DA6               	goto	l2580
  3135  07E0  3A01               	xorlw	1	; case 1
  3136  07E1  1903               	skipnz
  3137  07E2  2DE4               	goto	l2602
  3138  07E3  3A02               	xorlw	2	; case 3
  3139  07E4  1903               	skipnz
  3140  07E5  2E9D               	goto	l2656
  3141  07E6  2DA5               	goto	l658
  3142  07E7  0008               	return
  3143  07E8                     __end_of_Menu:
  3144                           
  3145                           	psect	text8
  3146  047B                     __ptext8:	
  3147 ;; *************** function _LCD_Write_String *****************
  3148 ;; Defined at:
  3149 ;;		line 134 in file "I2C_LCD.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  Str             2    6[COMMON] PTR unsigned char 
  3152 ;;		 -> STR_12(20), STR_11(15), STR_10(20), STR_9(14), 
  3153 ;;		 -> STR_8(15), STR_7(7), STR_6(16), STR_5(18), 
  3154 ;;		 -> STR_4(11), STR_3(14), STR_2(15), STR_1(16), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               2    9[COMMON] int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3166 ;;      Params:         2       0       0       0       0       0       0       0
  3167 ;;      Locals:         2       0       0       0       0       0       0       0
  3168 ;;      Temps:          1       0       0       0       0       0       0       0
  3169 ;;      Totals:         5       0       0       0       0       0       0       0
  3170 ;;Total ram usage:        5 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 5
  3173 ;; This function calls:
  3174 ;;		_LCD_Write_Char
  3175 ;; This function is called by:
  3176 ;;		_pantallaCarga
  3177 ;;		_Menu
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _LCD_Write_String
  3183  047B                     _LCD_Write_String:
  3184  047B                     l2546:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3187                           
  3188                           
  3189                           ;I2C_LCD.c: 134: void LCD_Write_String(char* Str);I2C_LCD.c: 135: {;I2C_LCD.c: 136:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  3190  047B  01F9               	clrf	LCD_Write_String@i
  3191  047C  01FA               	clrf	LCD_Write_String@i+1
  3192  047D  2C8C               	goto	l2552
  3193  047E                     l2548:
  3194                           
  3195                           ;I2C_LCD.c: 137:        LCD_Write_Char(Str[i]);
  3196  047E  0876               	movf	LCD_Write_String@Str,w
  3197  047F  0779               	addwf	LCD_Write_String@i,w
  3198  0480  0084               	movwf	4
  3199  0481  0877               	movf	LCD_Write_String@Str+1,w
  3200  0482  3D7A               	addwfc	LCD_Write_String@i+1,w
  3201  0483  0085               	movwf	5
  3202  0484  0800               	movf	0,w	;code access
  3203  0485  3184  2466  3184   	fcall	_LCD_Write_Char
  3204  0488                     l2550:
  3205  0488  3001               	movlw	1
  3206  0489  07F9               	addwf	LCD_Write_String@i,f
  3207  048A  3000               	movlw	0
  3208  048B  3DFA               	addwfc	LCD_Write_String@i+1,f
  3209  048C                     l2552:
  3210  048C  0876               	movf	LCD_Write_String@Str,w
  3211  048D  0779               	addwf	LCD_Write_String@i,w
  3212  048E  0084               	movwf	4
  3213  048F  0877               	movf	LCD_Write_String@Str+1,w
  3214  0490  3D7A               	addwfc	LCD_Write_String@i+1,w
  3215  0491  0085               	movwf	5
  3216  0492  0012               	moviw fsr0++
  3217  0493  1D03               	btfss	3,2
  3218  0494  2C96               	goto	u821
  3219  0495  2C97               	goto	u820
  3220  0496                     u821:
  3221  0496  2C7E               	goto	l2548
  3222  0497                     u820:
  3223  0497                     l798:
  3224  0497  0008               	return
  3225  0498                     __end_of_LCD_Write_String:
  3226                           
  3227                           	psect	text9
  3228  0466                     __ptext9:	
  3229 ;; *************** function _LCD_Write_Char *****************
  3230 ;; Defined at:
  3231 ;;		line 127 in file "I2C_LCD.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  Data            1    wreg     unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  Data            1    5[COMMON] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3245 ;;      Params:         0       0       0       0       0       0       0       0
  3246 ;;      Locals:         1       0       0       0       0       0       0       0
  3247 ;;      Temps:          1       0       0       0       0       0       0       0
  3248 ;;      Totals:         2       0       0       0       0       0       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 4
  3252 ;; This function calls:
  3253 ;;		_LCD_Write_4Bit
  3254 ;; This function is called by:
  3255 ;;		_pantallaCarga
  3256 ;;		_LCD_Write_String
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _LCD_Write_Char
  3262  0466                     _LCD_Write_Char:
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3266                           ;LCD_Write_Char@Data stored from wreg
  3267  0466  00F5               	movwf	LCD_Write_Char@Data
  3268  0467                     l2494:
  3269                           
  3270                           ;I2C_LCD.c: 127: void LCD_Write_Char(char Data);I2C_LCD.c: 128: {;I2C_LCD.c: 129:   RS =
      +                           1;
  3271  0467  01FD               	clrf	_RS
  3272  0468  0AFD               	incf	_RS,f
  3273  0469                     l2496:
  3274                           
  3275                           ;I2C_LCD.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  3276  0469  0875               	movf	LCD_Write_Char@Data,w
  3277  046A  39F0               	andlw	240
  3278  046B  3184  243E  3184   	fcall	_LCD_Write_4Bit
  3279                           
  3280                           ;I2C_LCD.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  3281  046E  0875               	movf	LCD_Write_Char@Data,w
  3282  046F  00F4               	movwf	??_LCD_Write_Char
  3283  0470  3003               	movlw	3
  3284  0471                     u805:
  3285  0471  35F4               	lslf	??_LCD_Write_Char,f
  3286  0472  3EFF               	addlw	-1
  3287  0473  1D03               	skipz
  3288  0474  2C71               	goto	u805
  3289  0475  3574               	lslf	??_LCD_Write_Char,w
  3290  0476  39F0               	andlw	240
  3291  0477  3184  243E  3184   	fcall	_LCD_Write_4Bit
  3292  047A                     l792:
  3293  047A  0008               	return
  3294  047B                     __end_of_LCD_Write_Char:
  3295                           
  3296                           	psect	text10
  3297  0498                     __ptext10:	
  3298 ;; *************** function _LCD_Set_Cursor *****************
  3299 ;; Defined at:
  3300 ;;		line 140 in file "I2C_LCD.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  ROW             1    wreg     unsigned char 
  3303 ;;  COL             1    6[COMMON] unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  ROW             1    9[COMMON] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3315 ;;      Params:         1       0       0       0       0       0       0       0
  3316 ;;      Locals:         1       0       0       0       0       0       0       0
  3317 ;;      Temps:          2       0       0       0       0       0       0       0
  3318 ;;      Totals:         4       0       0       0       0       0       0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 5
  3322 ;; This function calls:
  3323 ;;		_LCD_CMD
  3324 ;; This function is called by:
  3325 ;;		_pantallaCarga
  3326 ;;		_Menu
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _LCD_Set_Cursor
  3332  0498                     _LCD_Set_Cursor:
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3336                           ;LCD_Set_Cursor@ROW stored from wreg
  3337  0498  00F9               	movwf	LCD_Set_Cursor@ROW
  3338  0499                     l2530:
  3339                           
  3340                           ;I2C_LCD.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          1: {;I2C_LCD.c: 142:   switch(ROW)
  3341  0499  2CB2               	goto	l2540
  3342  049A                     l2532:
  3343                           
  3344                           ;I2C_LCD.c: 145:       LCD_CMD(0xC0 + COL-1);
  3345  049A  0876               	movf	LCD_Set_Cursor@COL,w
  3346  049B  3EBF               	addlw	191
  3347  049C  3184  2452  3184   	fcall	_LCD_CMD
  3348                           
  3349                           ;I2C_LCD.c: 146:       break;
  3350  049F  2CC5               	goto	l807
  3351  04A0                     l2534:
  3352                           
  3353                           ;I2C_LCD.c: 148:       LCD_CMD(0x94 + COL-1);
  3354  04A0  0876               	movf	LCD_Set_Cursor@COL,w
  3355  04A1  3E93               	addlw	147
  3356  04A2  3184  2452  3184   	fcall	_LCD_CMD
  3357                           
  3358                           ;I2C_LCD.c: 149:       break;
  3359  04A5  2CC5               	goto	l807
  3360  04A6                     l2536:
  3361                           
  3362                           ;I2C_LCD.c: 151:       LCD_CMD(0xD4 + COL-1);
  3363  04A6  0876               	movf	LCD_Set_Cursor@COL,w
  3364  04A7  3ED3               	addlw	211
  3365  04A8  3184  2452  3184   	fcall	_LCD_CMD
  3366                           
  3367                           ;I2C_LCD.c: 152:       break;
  3368  04AB  2CC5               	goto	l807
  3369  04AC                     l2538:
  3370                           
  3371                           ;I2C_LCD.c: 155:       LCD_CMD(0x80 + COL-1);
  3372  04AC  0876               	movf	LCD_Set_Cursor@COL,w
  3373  04AD  3E7F               	addlw	127
  3374  04AE  3184  2452  3184   	fcall	_LCD_CMD
  3375                           
  3376                           ;I2C_LCD.c: 156:   }
  3377  04B1  2CC5               	goto	l807
  3378  04B2                     l2540:
  3379  04B2  0879               	movf	LCD_Set_Cursor@ROW,w
  3380  04B3  00F7               	movwf	??_LCD_Set_Cursor
  3381  04B4  01F8               	clrf	??_LCD_Set_Cursor+1
  3382                           
  3383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3384                           ; Switch size 1, requested type "simple"
  3385                           ; Number of cases is 1, Range of values is 0 to 0
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte            4     3 (average)
  3389                           ; direct_byte            8     6 (fixed)
  3390                           ; jumptable            260     6 (fixed)
  3391                           ;	Chosen strategy is simple_byte
  3392  04B5  0878               	movf	??_LCD_Set_Cursor+1,w
  3393  04B6  3A00               	xorlw	0	; case 0
  3394  04B7  1903               	skipnz
  3395  04B8  2CBA               	goto	l2844
  3396  04B9  2CAC               	goto	l2538
  3397  04BA                     l2844:
  3398                           
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 3, Range of values is 2 to 4
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte           10     6 (average)
  3404                           ; direct_byte           15     9 (fixed)
  3405                           ; jumptable            263     9 (fixed)
  3406                           ;	Chosen strategy is simple_byte
  3407  04BA  0877               	movf	??_LCD_Set_Cursor,w
  3408  04BB  3A02               	xorlw	2	; case 2
  3409  04BC  1903               	skipnz
  3410  04BD  2C9A               	goto	l2532
  3411  04BE  3A01               	xorlw	1	; case 3
  3412  04BF  1903               	skipnz
  3413  04C0  2CA0               	goto	l2534
  3414  04C1  3A07               	xorlw	7	; case 4
  3415  04C2  1903               	skipnz
  3416  04C3  2CA6               	goto	l2536
  3417  04C4  2CAC               	goto	l2538
  3418  04C5                     l807:
  3419  04C5  0008               	return
  3420  04C6                     __end_of_LCD_Set_Cursor:
  3421                           
  3422                           	psect	text11
  3423  03BA                     __ptext11:	
  3424 ;; *************** function _LCD_Clear *****************
  3425 ;; Defined at:
  3426 ;;		line 183 in file "I2C_LCD.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3440 ;;      Params:         0       0       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 5
  3447 ;; This function calls:
  3448 ;;		_LCD_CMD
  3449 ;; This function is called by:
  3450 ;;		_Menu
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _LCD_Clear
  3456  03BA                     _LCD_Clear:
  3457  03BA                     l2554:	
  3458                           ;incstack = 0
  3459                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3460                           
  3461                           
  3462                           ;I2C_LCD.c: 185:   LCD_CMD(0x01);
  3463  03BA  3001               	movlw	1
  3464  03BB  3184  2452  3183   	fcall	_LCD_CMD
  3465  03BE                     l2556:
  3466                           
  3467                           ;I2C_LCD.c: 186:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  3468  03BE  300D               	movlw	13
  3469  03BF                     u1187:
  3470  03BF  0B89               	decfsz	9,f
  3471  03C0  2BBF               	goto	u1187
  3472  03C1  0000               	nop
  3473  03C2                     l822:
  3474  03C2  0008               	return
  3475  03C3                     __end_of_LCD_Clear:
  3476                           
  3477                           	psect	text12
  3478  03CC                     __ptext12:	
  3479 ;; *************** function _Inicio *****************
  3480 ;; Defined at:
  3481 ;;		line 9 in file "main.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3495 ;;      Params:         0       0       0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0
  3498 ;;      Totals:         0       0       0       0       0       0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 6
  3502 ;; This function calls:
  3503 ;;		_I2C_Master_Init
  3504 ;;		_LCD_Init
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _Inicio
  3512  03CC                     _Inicio:
  3513  03CC                     l2558:	
  3514                           ;incstack = 0
  3515                           ; Regs used in _Inicio: [wreg+status,2+status,0+pclath+cstack]
  3516                           
  3517                           
  3518                           ;main.c: 11:     I2C_Master_Init();
  3519  03CC  3183  23D6  3183   	fcall	_I2C_Master_Init
  3520                           
  3521                           ;main.c: 12:     LCD_Init(0x4E);
  3522  03CF  304E               	movlw	78
  3523  03D0  3185  2532  3183   	fcall	_LCD_Init
  3524  03D3                     l2560:
  3525  03D3  0140               	movlb	0	; select bank0
  3526  03D4  1518               	bsf	24,2	;volatile
  3527  03D5                     l650:
  3528  03D5  0008               	return
  3529  03D6                     __end_of_Inicio:
  3530                           
  3531                           	psect	text13
  3532  0532                     __ptext13:	
  3533 ;; *************** function _LCD_Init *****************
  3534 ;; Defined at:
  3535 ;;		line 80 in file "I2C_LCD.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  I2C_Add         1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  I2C_Add         1    7[COMMON] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3549 ;;      Params:         0       0       0       0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0       0
  3551 ;;      Temps:          1       0       0       0       0       0       0       0
  3552 ;;      Totals:         2       0       0       0       0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 5
  3556 ;; This function calls:
  3557 ;;		_IO_Expander_Write
  3558 ;;		_LCD_CMD
  3559 ;; This function is called by:
  3560 ;;		_Inicio
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function _LCD_Init
  3566  0532                     _LCD_Init:
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3570                           ;LCD_Init@I2C_Add stored from wreg
  3571  0532  00F7               	movwf	LCD_Init@I2C_Add
  3572  0533                     l2504:
  3573                           
  3574                           ;I2C_LCD.c: 80: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 81: {;I2C_LCD.c: 82:   i
      +                          2c_add = I2C_Add;
  3575  0533  0877               	movf	LCD_Init@I2C_Add,w
  3576  0534  00F6               	movwf	??_LCD_Init
  3577  0535  0876               	movf	??_LCD_Init,w
  3578  0536  0140               	movlb	0	; select bank0
  3579  0537  00E3               	movwf	_i2c_add
  3580  0538                     l2506:
  3581                           
  3582                           ;I2C_LCD.c: 83:   IO_Expander_Write(0x00);
  3583  0538  3000               	movlw	0
  3584  0539  3184  242B  3185   	fcall	_IO_Expander_Write
  3585  053C                     l2508:
  3586                           
  3587                           ;I2C_LCD.c: 84:   _delay((unsigned long)((30)*(4000000/4000.0)));
  3588  053C  3027               	movlw	39
  3589  053D  00F6               	movwf	??_LCD_Init
  3590  053E  30F5               	movlw	245
  3591  053F                     u1197:
  3592  053F  0B89               	decfsz	9,f
  3593  0540  2D3F               	goto	u1197
  3594  0541  0BF6               	decfsz	??_LCD_Init,f
  3595  0542  2D3F               	goto	u1197
  3596  0543  0000               	nop
  3597                           
  3598                           ;I2C_LCD.c: 85:   LCD_CMD(0x03);
  3599  0544  3003               	movlw	3
  3600  0545  3184  2452  3185   	fcall	_LCD_CMD
  3601  0548                     l2510:
  3602                           
  3603                           ;I2C_LCD.c: 86:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3604  0548  3007               	movlw	7
  3605  0549  00F6               	movwf	??_LCD_Init
  3606  054A  307D               	movlw	125
  3607  054B                     u1207:
  3608  054B  0B89               	decfsz	9,f
  3609  054C  2D4B               	goto	u1207
  3610  054D  0BF6               	decfsz	??_LCD_Init,f
  3611  054E  2D4B               	goto	u1207
  3612  054F  0000               	nop
  3613  0550                     l2512:
  3614                           
  3615                           ;I2C_LCD.c: 87:   LCD_CMD(0x03);
  3616  0550  3003               	movlw	3
  3617  0551  3184  2452  3185   	fcall	_LCD_CMD
  3618                           
  3619                           ;I2C_LCD.c: 88:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3620  0554  3007               	movlw	7
  3621  0555  00F6               	movwf	??_LCD_Init
  3622  0556  307D               	movlw	125
  3623  0557                     u1217:
  3624  0557  0B89               	decfsz	9,f
  3625  0558  2D57               	goto	u1217
  3626  0559  0BF6               	decfsz	??_LCD_Init,f
  3627  055A  2D57               	goto	u1217
  3628  055B  0000               	nop
  3629  055C                     l2514:
  3630                           
  3631                           ;I2C_LCD.c: 89:   LCD_CMD(0x03);
  3632  055C  3003               	movlw	3
  3633  055D  3184  2452  3185   	fcall	_LCD_CMD
  3634  0560                     l2516:
  3635                           
  3636                           ;I2C_LCD.c: 90:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3637  0560  3007               	movlw	7
  3638  0561  00F6               	movwf	??_LCD_Init
  3639  0562  307D               	movlw	125
  3640  0563                     u1227:
  3641  0563  0B89               	decfsz	9,f
  3642  0564  2D63               	goto	u1227
  3643  0565  0BF6               	decfsz	??_LCD_Init,f
  3644  0566  2D63               	goto	u1227
  3645  0567  0000               	nop
  3646                           
  3647                           ;I2C_LCD.c: 91:   LCD_CMD(0x02);
  3648  0568  3002               	movlw	2
  3649  0569  3184  2452  3185   	fcall	_LCD_CMD
  3650  056C                     l2518:
  3651                           
  3652                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3653  056C  3007               	movlw	7
  3654  056D  00F6               	movwf	??_LCD_Init
  3655  056E  307D               	movlw	125
  3656  056F                     u1237:
  3657  056F  0B89               	decfsz	9,f
  3658  0570  2D6F               	goto	u1237
  3659  0571  0BF6               	decfsz	??_LCD_Init,f
  3660  0572  2D6F               	goto	u1237
  3661  0573  0000               	nop
  3662  0574                     l2520:
  3663                           
  3664                           ;I2C_LCD.c: 93:   LCD_CMD(0x20 | (2 << 2));
  3665  0574  3028               	movlw	40
  3666  0575  3184  2452  3185   	fcall	_LCD_CMD
  3667                           
  3668                           ;I2C_LCD.c: 94:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3669  0578  3041               	movlw	65
  3670  0579  00F6               	movwf	??_LCD_Init
  3671  057A  30EE               	movlw	238
  3672  057B                     u1247:
  3673  057B  0B89               	decfsz	9,f
  3674  057C  2D7B               	goto	u1247
  3675  057D  0BF6               	decfsz	??_LCD_Init,f
  3676  057E  2D7B               	goto	u1247
  3677  057F  3200               	nop2
  3678  0580                     l2522:
  3679                           
  3680                           ;I2C_LCD.c: 95:   LCD_CMD(0x0C);
  3681  0580  300C               	movlw	12
  3682  0581  3184  2452  3185   	fcall	_LCD_CMD
  3683  0584                     l2524:
  3684                           
  3685                           ;I2C_LCD.c: 96:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3686  0584  3041               	movlw	65
  3687  0585  00F6               	movwf	??_LCD_Init
  3688  0586  30EE               	movlw	238
  3689  0587                     u1257:
  3690  0587  0B89               	decfsz	9,f
  3691  0588  2D87               	goto	u1257
  3692  0589  0BF6               	decfsz	??_LCD_Init,f
  3693  058A  2D87               	goto	u1257
  3694  058B  3200               	nop2
  3695                           
  3696                           ;I2C_LCD.c: 97:   LCD_CMD(0x01);
  3697  058C  3001               	movlw	1
  3698  058D  3184  2452  3185   	fcall	_LCD_CMD
  3699  0590                     l2526:
  3700                           
  3701                           ;I2C_LCD.c: 98:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3702  0590  3041               	movlw	65
  3703  0591  00F6               	movwf	??_LCD_Init
  3704  0592  30EE               	movlw	238
  3705  0593                     u1267:
  3706  0593  0B89               	decfsz	9,f
  3707  0594  2D93               	goto	u1267
  3708  0595  0BF6               	decfsz	??_LCD_Init,f
  3709  0596  2D93               	goto	u1267
  3710  0597  3200               	nop2
  3711  0598                     l2528:
  3712                           
  3713                           ;I2C_LCD.c: 99:   LCD_CMD(0x04 | 0x02);
  3714  0598  3006               	movlw	6
  3715  0599  3184  2452  3185   	fcall	_LCD_CMD
  3716                           
  3717                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3718  059C  3041               	movlw	65
  3719  059D  00F6               	movwf	??_LCD_Init
  3720  059E  30EE               	movlw	238
  3721  059F                     u1277:
  3722  059F  0B89               	decfsz	9,f
  3723  05A0  2D9F               	goto	u1277
  3724  05A1  0BF6               	decfsz	??_LCD_Init,f
  3725  05A2  2D9F               	goto	u1277
  3726  05A3  3200               	nop2
  3727  05A4                     l780:
  3728  05A4  0008               	return
  3729  05A5                     __end_of_LCD_Init:
  3730                           
  3731                           	psect	text14
  3732  0452                     __ptext14:	
  3733 ;; *************** function _LCD_CMD *****************
  3734 ;; Defined at:
  3735 ;;		line 120 in file "I2C_LCD.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  CMD             1    wreg     unsigned char 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  CMD             1    5[COMMON] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3749 ;;      Params:         0       0       0       0       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0       0       0       0
  3752 ;;      Totals:         2       0       0       0       0       0       0       0
  3753 ;;Total ram usage:        2 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 4
  3756 ;; This function calls:
  3757 ;;		_LCD_Write_4Bit
  3758 ;; This function is called by:
  3759 ;;		_LCD_Init
  3760 ;;		_LCD_Set_Cursor
  3761 ;;		_LCD_Clear
  3762 ;;		_LCD_SL
  3763 ;;		_LCD_SR
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _LCD_CMD
  3769  0452                     _LCD_CMD:
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3773                           ;LCD_CMD@CMD stored from wreg
  3774  0452  00F5               	movwf	LCD_CMD@CMD
  3775  0453                     l2498:
  3776                           
  3777                           ;I2C_LCD.c: 120: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 121: {;I2C_LCD.c: 122:   RS 
      +                          = 0;
  3778  0453  01FD               	clrf	_RS
  3779  0454                     l2500:
  3780                           
  3781                           ;I2C_LCD.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  3782  0454  0875               	movf	LCD_CMD@CMD,w
  3783  0455  39F0               	andlw	240
  3784  0456  3184  243E  3184   	fcall	_LCD_Write_4Bit
  3785  0459                     l2502:
  3786                           
  3787                           ;I2C_LCD.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3788  0459  0875               	movf	LCD_CMD@CMD,w
  3789  045A  00F4               	movwf	??_LCD_CMD
  3790  045B  3003               	movlw	3
  3791  045C                     u815:
  3792  045C  35F4               	lslf	??_LCD_CMD,f
  3793  045D  3EFF               	addlw	-1
  3794  045E  1D03               	skipz
  3795  045F  2C5C               	goto	u815
  3796  0460  3574               	lslf	??_LCD_CMD,w
  3797  0461  39F0               	andlw	240
  3798  0462  3184  243E  3184   	fcall	_LCD_Write_4Bit
  3799  0465                     l789:
  3800  0465  0008               	return
  3801  0466                     __end_of_LCD_CMD:
  3802                           
  3803                           	psect	text15
  3804  043E                     __ptext15:	
  3805 ;; *************** function _LCD_Write_4Bit *****************
  3806 ;; Defined at:
  3807 ;;		line 111 in file "I2C_LCD.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  Nibble          1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  Nibble          1    3[COMMON] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3821 ;;      Params:         0       0       0       0       0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0
  3824 ;;      Totals:         2       0       0       0       0       0       0       0
  3825 ;;Total ram usage:        2 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 3
  3828 ;; This function calls:
  3829 ;;		_IO_Expander_Write
  3830 ;; This function is called by:
  3831 ;;		_LCD_CMD
  3832 ;;		_LCD_Write_Char
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function _LCD_Write_4Bit
  3838  043E                     _LCD_Write_4Bit:
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3842                           ;LCD_Write_4Bit@Nibble stored from wreg
  3843  043E  00F3               	movwf	LCD_Write_4Bit@Nibble
  3844  043F                     l2488:
  3845                           
  3846                           ;I2C_LCD.c: 111: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 112: {;I2C_LCD.c: 
      +                          114:   Nibble |= RS;
  3847  043F  087D               	movf	_RS,w
  3848  0440  00F2               	movwf	??_LCD_Write_4Bit
  3849  0441  0872               	movf	??_LCD_Write_4Bit,w
  3850  0442  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  3851  0443                     l2490:
  3852                           
  3853                           ;I2C_LCD.c: 115:   IO_Expander_Write(Nibble | 0x04);
  3854  0443  0873               	movf	LCD_Write_4Bit@Nibble,w
  3855  0444  3804               	iorlw	4
  3856  0445  3184  242B  3184   	fcall	_IO_Expander_Write
  3857  0448                     l2492:
  3858                           
  3859                           ;I2C_LCD.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  3860  0448  0873               	movf	LCD_Write_4Bit@Nibble,w
  3861  0449  39FB               	andlw	251
  3862  044A  3184  242B  3184   	fcall	_IO_Expander_Write
  3863                           
  3864                           ;I2C_LCD.c: 117:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3865  044D  3010               	movlw	16
  3866  044E                     u1287:
  3867  044E  0B89               	decfsz	9,f
  3868  044F  2C4E               	goto	u1287
  3869  0450  3200               	nop2
  3870  0451                     l786:
  3871  0451  0008               	return
  3872  0452                     __end_of_LCD_Write_4Bit:
  3873                           
  3874                           	psect	text16
  3875  042B                     __ptext16:	
  3876 ;; *************** function _IO_Expander_Write *****************
  3877 ;; Defined at:
  3878 ;;		line 103 in file "I2C_LCD.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  Data            1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  Data            1    1[COMMON] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, pclath, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3892 ;;      Params:         0       0       0       0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0
  3895 ;;      Totals:         1       0       0       0       0       0       0       0
  3896 ;;Total ram usage:        1 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 2
  3899 ;; This function calls:
  3900 ;;		_I2C_Master_Start
  3901 ;;		_I2C_Master_Stop
  3902 ;;		_I2C_Master_Write
  3903 ;; This function is called by:
  3904 ;;		_LCD_Init
  3905 ;;		_LCD_Write_4Bit
  3906 ;;		_Backlight
  3907 ;;		_noBacklight
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _IO_Expander_Write
  3913  042B                     _IO_Expander_Write:
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3917                           ;IO_Expander_Write@Data stored from wreg
  3918  042B  00F1               	movwf	IO_Expander_Write@Data
  3919  042C                     l2486:
  3920                           
  3921                           ;I2C_LCD.c: 103: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 104: {;I2C_LCD.c:
      +                           105:   I2C_Master_Start();
  3922  042C  3183  239C  3184   	fcall	_I2C_Master_Start
  3923                           
  3924                           ;I2C_LCD.c: 106:   I2C_Master_Write(i2c_add);
  3925  042F  0140               	movlb	0	; select bank0
  3926  0430  0863               	movf	_i2c_add,w
  3927  0431  3183  23FA  3184   	fcall	_I2C_Master_Write
  3928                           
  3929                           ;I2C_LCD.c: 107:   I2C_Master_Write(Data | BackLight_State);
  3930  0434  0871               	movf	IO_Expander_Write@Data,w
  3931  0435  0140               	movlb	0	; select bank0
  3932  0436  0457               	iorwf	_BackLight_State,w
  3933  0437  3183  23FA  3184   	fcall	_I2C_Master_Write
  3934                           
  3935                           ;I2C_LCD.c: 108:   I2C_Master_Stop();
  3936  043A  3183  23A2  3184   	fcall	_I2C_Master_Stop
  3937  043D                     l783:
  3938  043D  0008               	return
  3939  043E                     __end_of_IO_Expander_Write:
  3940                           
  3941                           	psect	text17
  3942  03FA                     __ptext17:	
  3943 ;; *************** function _I2C_Master_Write *****************
  3944 ;; Defined at:
  3945 ;;		line 56 in file "I2C_LCD.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  data            1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  data            1    0[COMMON] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      unsigned char 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, pclath, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3959 ;;      Params:         0       0       0       0       0       0       0       0
  3960 ;;      Locals:         1       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0
  3962 ;;      Totals:         1       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        1 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 1
  3966 ;; This function calls:
  3967 ;;		_I2C_Master_Wait
  3968 ;; This function is called by:
  3969 ;;		_IO_Expander_Write
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _I2C_Master_Write
  3975  03FA                     _I2C_Master_Write:
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3979                           ;I2C_Master_Write@data stored from wreg
  3980  03FA  00F0               	movwf	I2C_Master_Write@data
  3981  03FB                     l2482:
  3982                           
  3983                           ;I2C_LCD.c: 56: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 57: {;I2C_
      +                          LCD.c: 58:     I2C_Master_Wait();
  3984  03FB  3183  23E1  3183   	fcall	_I2C_Master_Wait
  3985  03FE                     l2484:
  3986                           
  3987                           ;I2C_LCD.c: 59:     SSP1BUF = data;
  3988  03FE  0870               	movf	I2C_Master_Write@data,w
  3989  03FF  0143               	movlb	3	; select bank3
  3990  0400  008C               	movwf	12	;volatile
  3991  0401                     l768:	
  3992                           ;I2C_LCD.c: 60:     while(!SSP1IF);
  3993                           
  3994  0401  014E               	movlb	14	; select bank14
  3995  0402  1C8D               	btfss	13,1	;volatile
  3996  0403  2C05               	goto	u791
  3997  0404  2C06               	goto	u790
  3998  0405                     u791:
  3999  0405  2C01               	goto	l768
  4000  0406                     u790:
  4001  0406                     l770:
  4002                           
  4003                           ;I2C_LCD.c: 61:  SSP1IF = 0;
  4004  0406  108D               	bcf	13,1	;volatile
  4005  0407                     l771:	
  4006                           ;I2C_LCD.c: 62:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  4007                           
  4008  0407  0008               	return
  4009  0408                     __end_of_I2C_Master_Write:
  4010                           
  4011                           	psect	text18
  4012  03A2                     __ptext18:	
  4013 ;; *************** function _I2C_Master_Stop *****************
  4014 ;; Defined at:
  4015 ;;		line 36 in file "I2C_LCD.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4029 ;;      Params:         0       0       0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; Hardware stack levels required when called: 1
  4036 ;; This function calls:
  4037 ;;		_I2C_Master_Wait
  4038 ;; This function is called by:
  4039 ;;		_IO_Expander_Write
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _I2C_Master_Stop
  4045  03A2                     _I2C_Master_Stop:
  4046  03A2                     l2478:	
  4047                           ;incstack = 0
  4048                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4049                           
  4050                           
  4051                           ;I2C_LCD.c: 38:     I2C_Master_Wait();
  4052  03A2  3183  23E1  3183   	fcall	_I2C_Master_Wait
  4053  03A5                     l2480:
  4054                           
  4055                           ;I2C_LCD.c: 39:     PEN = 1;
  4056  03A5  0143               	movlb	3	; select bank3
  4057  03A6  1511               	bsf	17,2	;volatile
  4058  03A7                     l759:
  4059  03A7  0008               	return
  4060  03A8                     __end_of_I2C_Master_Stop:
  4061                           
  4062                           	psect	text19
  4063  039C                     __ptext19:	
  4064 ;; *************** function _I2C_Master_Start *****************
  4065 ;; Defined at:
  4066 ;;		line 24 in file "I2C_LCD.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4080 ;;      Params:         0       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 1
  4087 ;; This function calls:
  4088 ;;		_I2C_Master_Wait
  4089 ;; This function is called by:
  4090 ;;		_IO_Expander_Write
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _I2C_Master_Start
  4096  039C                     _I2C_Master_Start:
  4097  039C                     l2474:	
  4098                           ;incstack = 0
  4099                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4100                           
  4101                           
  4102                           ;I2C_LCD.c: 26:     I2C_Master_Wait();
  4103  039C  3183  23E1  3183   	fcall	_I2C_Master_Wait
  4104  039F                     l2476:
  4105                           
  4106                           ;I2C_LCD.c: 27:     SEN1 = 1;
  4107  039F  0143               	movlb	3	; select bank3
  4108  03A0  1411               	bsf	17,0	;volatile
  4109  03A1                     l753:
  4110  03A1  0008               	return
  4111  03A2                     __end_of_I2C_Master_Start:
  4112                           
  4113                           	psect	text20
  4114  03E1                     __ptext20:	
  4115 ;; *************** function _I2C_Master_Wait *****************
  4116 ;; Defined at:
  4117 ;;		line 19 in file "I2C_LCD.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4131 ;;      Params:         0       0       0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0
  4134 ;;      Totals:         0       0       0       0       0       0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_I2C_Master_Start
  4141 ;;		_I2C_Master_Stop
  4142 ;;		_I2C_Master_Write
  4143 ;;		_I2C_Master_RepeatedStart
  4144 ;;		_I2C_ACK
  4145 ;;		_I2C_NACK
  4146 ;;		_I2C_Read_Byte
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _I2C_Master_Wait
  4152  03E1                     _I2C_Master_Wait:
  4153  03E1                     l2470:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4156                           
  4157  03E1                     l747:	
  4158                           ;I2C_LCD.c: 21:     while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  4159                           
  4160  03E1  0143               	movlb	3	; select bank3
  4161  03E2  190F               	btfsc	15,2	;volatile
  4162  03E3  2BE5               	goto	u771
  4163  03E4  2BE6               	goto	u770
  4164  03E5                     u771:
  4165  03E5  2BE1               	goto	l747
  4166  03E6                     u770:
  4167  03E6                     l2472:
  4168  03E6  0811               	movf	17,w	;volatile
  4169  03E7  391F               	andlw	31
  4170  03E8  1D03               	btfss	3,2
  4171  03E9  2BEB               	goto	u781
  4172  03EA  2BEC               	goto	u780
  4173  03EB                     u781:
  4174  03EB  2BE1               	goto	l747
  4175  03EC                     u780:
  4176  03EC                     l750:
  4177  03EC  0008               	return
  4178  03ED                     __end_of_I2C_Master_Wait:
  4179                           
  4180                           	psect	text21
  4181  03D6                     __ptext21:	
  4182 ;; *************** function _I2C_Master_Init *****************
  4183 ;; Defined at:
  4184 ;;		line 9 in file "I2C_LCD.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4198 ;;      Params:         0       0       0       0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0
  4201 ;;      Totals:         0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        0 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_Inicio
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _I2C_Master_Init
  4213  03D6                     _I2C_Master_Init:
  4214  03D6                     l1452:	
  4215                           ;incstack = 0
  4216                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  4217                           
  4218                           
  4219                           ;I2C_LCD.c: 11:   SSP1CON1 = 0x28;
  4220  03D6  3028               	movlw	40
  4221  03D7  0143               	movlb	3	; select bank3
  4222  03D8  0090               	movwf	16	;volatile
  4223  03D9                     l1454:
  4224                           
  4225                           ;I2C_LCD.c: 12:   SSP1CON2 = 0x00;
  4226  03D9  0191               	clrf	17	;volatile
  4227  03DA                     l1456:
  4228                           
  4229                           ;I2C_LCD.c: 13:   SSP1STAT = 0x00;
  4230  03DA  018F               	clrf	15	;volatile
  4231                           
  4232                           ;I2C_LCD.c: 14:   SSP1ADD = ((4000000/4)/100000) - 1;
  4233  03DB  3009               	movlw	9
  4234  03DC  008D               	movwf	13	;volatile
  4235  03DD                     l1458:
  4236                           
  4237                           ;I2C_LCD.c: 15:   TRISB6 = 1;
  4238  03DD  0140               	movlb	0	; select bank0
  4239  03DE  1713               	bsf	19,6	;volatile
  4240  03DF                     l1460:
  4241                           
  4242                           ;I2C_LCD.c: 16:   TRISB4 = 1;
  4243  03DF  1613               	bsf	19,4	;volatile
  4244  03E0                     l744:
  4245  03E0  0008               	return
  4246  03E1                     __end_of_I2C_Master_Init:
  4247  007E                     btemp	set	126	;btemp
  4248  007E                     wtemp0	set	126
  4249                           
  4250                           	psect	config
  4251                           
  4252                           ;Config register CONFIG1 @ 0x8007
  4253                           ;	External Oscillator Mode Selection bits
  4254                           ;	FEXTOSC = OFF, Oscillator not enabled
  4255                           ;	Power-up Default Value for COSC bits
  4256                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4257                           ;	Clock Out Enable bit
  4258                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4259                           ;	VDD Range Analog Calibration Selection bit
  4260                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4261  8007                     	org	32775
  4262  8007  3FED               	dw	16365
  4263                           
  4264                           ;Config register CONFIG2 @ 0x8008
  4265                           ;	Master Clear Enable bit
  4266                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4267                           ;	Power-up Timer Selection bits
  4268                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4269                           ;	WDT Operating Mode bits
  4270                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4271                           ;	Brown-out Reset Enable bits
  4272                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4273                           ;	Brown-out Reset Voltage Selection bit
  4274                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4275                           ;	PPSLOCKED One-Way Set Enable bit
  4276                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  4277                           ;	Stack Overflow/Underflow Reset Enable bit
  4278                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4279  8008                     	org	32776
  4280  8008  3FE7               	dw	16359
  4281                           
  4282                           ;Config register CONFIG4 @ 0x800A
  4283                           ;	Boot Block Size Selection bits
  4284                           ;	BBSIZE = BB512, 512 words boot block size
  4285                           ;	Boot Block Enable bit
  4286                           ;	BBEN = OFF, Boot Block is disabled
  4287                           ;	SAF Enable bit
  4288                           ;	SAFEN = OFF, SAF is disabled
  4289                           ;	Application Block Write Protection bit
  4290                           ;	WRTAPP = OFF, Application Block is not write-protected
  4291                           ;	Boot Block Write Protection bit
  4292                           ;	WRTB = OFF, Boot Block is not write-protected
  4293                           ;	Configuration Registers Write Protection bit
  4294                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4295                           ;	Storage Area Flash (SAF) Write Protection bit
  4296                           ;	WRTSAF = OFF, SAF is not write-protected
  4297                           ;	Low Voltage Programming Enable bit
  4298                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4299  800A                     	org	32778
  4300  800A  3FFF               	dw	16383
  4301                           
  4302                           ;Config register CONFIG5 @ 0x800B
  4303                           ;	User Program Flash Memory Code Protection bit
  4304                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4305  800B                     	org	32779
  4306  800B  3FFF               	dw	16383

Data Sizes:
    Strings     181
    Constant    32
    Data        18
    BSS         40
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     10      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$1881$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S352$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[20]), STR_11(CODE[15]), STR_10(CODE[20]), STR_9(CODE[14]), 
		 -> STR_8(CODE[15]), STR_7(CODE[7]), STR_6(CODE[16]), STR_5(CODE[18]), 
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[16]), 

    nombres	PTR unsigned char [8] size(2) Largest target is 18
		 -> STR_8(CODE[15]), STR_7(CODE[7]), STR_6(CODE[16]), STR_5(CODE[18]), 
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[16]), 

    S352$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S352$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S352$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E3918[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_Menu
    _main->_pantallaCarga
    _pantallaCarga->_LCD_Write_String
    _Menu->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _Inicio->_LCD_Init
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_Menu

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5556
                             _Inicio
                               _Menu
                  _SYSTEM_Initialize
                      _pantallaCarga
 ---------------------------------------------------------------------------------
 (1) _pantallaCarga                                        4     4      0    2567
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Menu                                                12    10      2    2790
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2    1135
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1    1231
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _Inicio                                               0     0      0     199
                    _I2C_Master_Init
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0     199
                                              6 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Inicio
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
   _Menu
     _LCD_Clear
       _LCD_CMD
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _pantallaCarga
     _LCD_Set_Cursor
     _LCD_Write_Char
     _LCD_Write_String

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      52       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      52      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 23 16:25:51 2021

                                              _RS 007D                                               l250 04F4  
                                             l610 03AD                                               l613 039B  
                                             l358 03CB                                               l607 03F9  
                                             l650 03D5                                               l750 03EC  
                                             l822 03C2                                               l807 04C5  
                                             l655 0531                                               l744 03E0  
                                             l753 03A1                                               l770 0406  
                                             l658 05A5                                               l747 03E1  
                                             l771 0407                                               l780 05A4  
                                             l759 03A7                                               l783 043D  
                                             l768 0401                                               l792 047A  
                                             l786 0451                                               l699 0417  
                                             l789 0465                                               l798 0497  
                                             _PEN 0C8A                                               u820 0497  
                                             u900 06A4                                               u805 0471  
                                             u821 0496                                               u901 06A3  
                                             u910 06C0                                               u830 0531  
                                             u815 045C                                               u911 06BF  
                                             u831 0530                                               u920 06DB  
                                             u840 05AD                                               u921 06D8  
                                             u841 05AC                                               u770 03E6  
                                             u850 05EB                                               u771 03E5  
                                             u851 05EA                                               u835 052D  
                                             u780 03EC                                               u940 06FC  
                                             u860 0630                                               u781 03EB  
                                             u941 06FB                                               u861 062F  
                                             u790 0406                                               u950 0707  
                                             u934 06DD                                               u870 064C  
                                             u791 0405                                               u951 0706  
                                             u871 064B                                               u960 0722  
                                             u880 0668                                               u961 071F  
                                             u945 06F8                                               u881 0667  
                                             u890 0684                                               u891 0683  
                                             u980 0743                                               u981 0742  
                                             u990 074E                                               u974 0724  
                                             u991 074D                                               u985 073F  
                                             wreg 0009                              _I2C1_DO_RX_NACK_STOP 0000  
                                      Menu@i_1231 005D                                        Menu@i_1240 005F  
                                      Menu@i_1241 0061                                   __end_of_LCD_CMD 0466  
                             LCD_Write_String@Str 0076                                    _LCD_Set_Cursor 0498  
                                            l1400 04CC                                              l1410 04DA  
                                            l1402 04CE                                              l1420 04E1  
                                            l1412 04DB                                              l1404 04D0  
                                            l1430 04EC                                              l1422 04E3  
                                            l1414 04DC                                              l1406 04D6  
                                            l1440 03C7                                              l1432 04EF  
                                            l1424 04E5                                              l1416 04DD  
                                            l1408 04D7                                              l1442 03CA  
                                            l1434 04F1                                              l1426 04E7  
                                            l1418 04DF                                              l1450 0399  
                                            l1460 03DF                                              l1452 03D6  
                                            l2500 0454                                              l1436 03C3  
                                            l1444 03A8                                              l1428 04E9  
                                            l1454 03D9                                              l2502 0459  
                                            l2510 0548                                              l1438 03C5  
                                            l1446 03AA                                              l1622 03ED  
                                            l1456 03DA                                              l2520 0574  
                                            l2512 0550                                              l2504 0533  
                                            l2600 05DF                                              l1448 03AC  
                                            l1624 03F6                                              l1458 03DD  
                                            l2522 0580                                              l2514 055C  
                                            l2506 0538                                              l2530 0499  
                                            l2610 05F9                                              l2602 05E4  
                                            l2524 0584                                              l2516 0560  
                                            l2508 053C                                              l2532 049A  
                                            l2540 04B2                                              l2700 0731  
                                            l2620 061D                                              l2612 0601  
                                            l2604 05EB                                              l1396 04C6  
                                            l2470 03E1                                              l2526 0590  
                                            l2518 056C                                              l2534 04A0  
                                            l2550 0488                                              l2710 075C  
                                            l2702 0736                                              l2630 0644  
                                            l2622 0623                                              l2614 0607  
                                            l2606 05EE                                              l1398 04CA  
                                            l2472 03E6                                              l2480 03A5  
                                            l2528 0598                                              l2560 03D3  
                                            l2536 04A6                                              l2552 048C  
                                            l2720 0778                                              l2704 0743  
                                            l2640 0664                                              l2632 0648  
                                            l2624 062B                                              l2616 060F  
                                            l2608 05F3                                              l2474 039C  
                                            l2482 03FB                                              l2490 0443  
                                            l2554 03BA                                              l2538 04AC  
                                            l2546 047B                                              l2730 07A3  
                                            l2722 077D                                              l2706 0748  
                                            l2650 0684                                              l2642 0668  
                                            l2634 064C                                              l2626 0630  
                                            l2618 0615                                              l2570 0507  
                                            l2562 04F5                                              l2476 039F  
                                            l2484 03FE                                              l2492 0448  
                                            l2556 03BE                                              l2548 047E  
                                            l2740 07BF                                              l2724 078A  
                                            l2716 075F                                              l2708 074E  
                                            l2660 06A7                                              l2652 0695  
                                            l2644 0679                                              l2636 065D  
                                            l2628 0641                                              l2580 05A6  
                                            l2572 0510                                              l2564 0502  
                                            l2478 03A2                                              l2486 042C  
                                            l2558 03CC                                              l2494 0467  
                                            l2742 07C4                                              l2718 076B  
                                            l2726 078F                                              l2670 06CE  
                                            l2662 06AC                                              l2654 0698  
                                            l2646 067C                                              l2638 0660  
                                            l2590 05C2                                              l2582 05AD  
                                            l2574 0514                                              l2488 043F  
                                            l2496 0469                                              l2744 07D1  
                                            l2736 07A6                                              l2728 0795  
                                            l2680 06EA                                              l2664 06B2  
                                            l2656 069D                                              l2648 0680  
                                            l2592 05C8                                              l2584 05B0  
                                            l2576 051F                                              l2498 0453  
                                            l2842 07DC                                              l2738 07B2  
                                            l2690 0715                                              l2682 06EF  
                                            l2666 06B9                                              l2658 06A4  
                                            l2594 05CF                                              l2586 05B5  
                                            l2578 0524                                              l2754 0408  
                                            l2844 04BA                                              l2684 06FC  
                                            l2676 06D1                                              l2668 06C0  
                                            l2596 05DC                                              l2588 05BB  
                                            l2748 07D7                                              l2756 040E  
                                            l2678 06DD                                              l2686 0701  
                                            l2598 05DF                                              l2758 0411  
                                            l2696 0718                                              l2688 0707  
                                            l2698 0724                                              STR_1 085A  
                                            STR_2 0889                                              STR_3 08A7  
                                            STR_4 08C3                                              STR_5 0848  
                                            STR_6 086A                                              STR_7 08CE  
                                            STR_8 0898                                              STR_9 08B5  
                                            u1000 0769                                              u1001 0766  
                                            u1020 078A                                              u1021 0789  
                                            u1030 0795                                              u1014 076B  
                                            u1031 0794                                              u1040 07B0  
                                            u1041 07AD                                              u1025 0786  
                                            u1107 063A                                              u1060 07D1  
                                            u1061 07D0                                              u1117 0656  
                                            u1054 07B2                                              u1207 054B  
                                            u1127 0672                                              u1217 0557  
                                            u1065 07CD                                              u1137 068E  
                                            u1227 0563                                              u1147 06E3  
                                            u1237 056F                                              u1157 072A  
                                            _LATA 0018                                              _LATB 0019  
                                            u1247 057B                                              u1167 0771  
                                            u1087 0519                                              _LATC 001A  
                                            u1257 0587                                              u1177 07B8  
                                            u1097 05D5                                              u1267 0593  
                                            u1187 03BF                                              u1277 059F  
                                            u1197 053F                                              u1287 044E  
                                            _RCEN 0C8B                                              _SEN1 0C88  
                                            _RSEN 0C89                                              _WPUA 1F39  
                                            _WPUB 1F44                                              _WPUC 1F4F  
                                            _Menu 05A5                                 ?_LCD_Write_String 0076  
                                            _main 0408                                __size_of_LCD_Clear 0009  
                                            fsr0h 0005                                              fsr1h 0007  
                                            indf0 0000                                              fsr0l 0004  
                                            fsr1l 0006                                              btemp 007E  
                                            start 0002                                ??_LCD_Write_String 0078  
                            LCD_Write_4Bit@Nibble 0073                                  __end_of_LCD_Init 05A5  
                                ?_I2C_Master_Init 0070                                  ?_I2C_Master_Wait 0070  
                                ?_I2C_Master_Stop 0070                    __size_of_OSCILLATOR_Initialize 0006  
                                           ?_Menu 007B                     __end_of_OSCILLATOR_Initialize 03AE  
                                           ?_main 0070                                             _ACKEN 0C8C  
                                           _ACKDT 0C8D                                             STR_10 0834  
                                           STR_11 087A                                             STR_12 0820  
                      __end_of_i2c1_fsmStateTable 0820                                             _OSCEN 0891  
                                           _TRISA 0012                                             _TRISB 0013  
                                           _TRISC 0014                                             Menu@i 005B  
                          __end_of_LCD_Set_Cursor 04C6                                 ??_I2C1_Initialize 0070  
                                     Menu@entrada 007B                                             _clear 0045  
                                  _WDT_Initialize 0399                                             _punto 0058  
                                           status 0003                                             wtemp0 007E  
                                  _LCD_Write_4Bit 043E                                    _LCD_Write_Char 0466  
                                 __initialization 07E8                                      __end_of_Menu 07E8  
                                    __end_of_main 0419                                 _IO_Expander_Write 042B  
                                          ??_Menu 0059                                ?_IO_Expander_Write 0070  
                                          ??_main 007D                                 __end_of_LCD_Clear 03C3  
                                       ??_LCD_CMD 0074                                 ?_I2C_Master_Start 0070  
                               ?_I2C_Master_Write 0070                            __end_of_WDT_Initialize 039C  
                             ??_IO_Expander_Write 0071                                   ?_LCD_Set_Cursor 0076  
                              ??_I2C_Master_Start 0070                                ??_I2C_Master_Write 0070  
                                          _ANSELA 1F38                                            _ANSELB 1F43  
                                          _ANSELC 1F4E                                            _RB4PPS 1F1C  
                                          _RB6PPS 1F1E                                            _ODCONA 1F3A  
                                          _ODCONB 1F45                                            _ODCONC 1F50  
                                          _INLVLA 1F3C                                            _INLVLB 1F47  
                                          _INLVLC 1F52                                            _OSCFRQ 0893  
                                          _SSP1IF 3869                                            _WDTCON 080C  
                                          _TRISB4 009C                                            _TRISB6 009E  
                          __end_of_LCD_Write_4Bit 0452                            __end_of_LCD_Write_Char 047B  
                                _I2C1_DO_TX_EMPTY 0000                                            _Inicio 03CC  
                       __end_of_IO_Expander_Write 043E                             _I2C1_DO_SEND_ADR_READ 0000  
                                   _estadoBotones 003D                                   ?_WDT_Initialize 0070  
                                  pantallaCarga@i 0059                           _I2C1_DO_RX_NACK_RESTART 0000  
                               _SYSTEM_Initialize 03ED                           __end_of__initialization 07FD  
                                       ?_LCD_Init 0070                                   ?_LCD_Write_4Bit 0070  
                              ?_SYSTEM_Initialize 0070                                   ?_LCD_Write_Char 0070  
                         _rdBlkRegCompleteHandler 0000                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0419                               ??_SYSTEM_Initialize 0070  
                       __end_of_SYSTEM_Initialize 03FA                                        __pbssBANK0 0020  
                                      ??_LCD_Init 0076                             _rd1RegCompleteHandler 0000  
                          __size_of_pantallaCarga 003D                                           ?_Inicio 0070  
                               _I2C1_DO_SEND_STOP 0000                             _wr1RegCompleteHandler 0000  
                      __size_of_IO_Expander_Write 0013                                        __pmaintext 0408  
                                 _I2C1_Initialize 03C3                                           _ACKSTAT 0C8E  
                       __size_of_LCD_Write_String 001D                                           _LCD_CMD 0452  
                                         _OSCTUNE 0892                                           _SSP1ADD 018D  
                                         _SLRCONA 1F3B                                           _SLRCONB 1F46  
                                         _SLRCONC 1F51                                           _SSP1BUF 018C  
                              _i2c1_fsmStateTable 0800    _rd1RegCompleteHandler@i2c1_master_example$F143 0000  
  _wr1RegCompleteHandler@i2c1_master_example$F160 0000    _rd2RegCompleteHandler@i2c1_master_example$F154 0000  
  _wr2RegCompleteHandler@i2c1_master_example$F166 0000  _rdBlkRegCompleteHandler@i2c1_master_example$F177 0000  
                                         _i2c_add 0063                                   __size_of_Inicio 000A  
                                ??_LCD_Set_Cursor 0077                                           __ptext1 04F5  
                                         __ptext2 03ED                                           __ptext3 0399  
                                         __ptext4 04C6                                           __ptext5 03A8  
                                         __ptext6 03C3                                           __ptext7 05A5  
                                         __ptext8 047B                                           __ptext9 0466  
                           _OSCILLATOR_Initialize 03A8                                     _pantallaCarga 04F5  
                        ??_PIN_MANAGER_Initialize 0070                                           _nombres 0047  
                        __size_of_I2C_Master_Init 000B                          __size_of_I2C_Master_Wait 000C  
                        __size_of_I2C_Master_Stop 0006                                         _LCD_Clear 03BA  
                      __size_of_SYSTEM_Initialize 000D                                           clrloop0 03AF  
                            end_of_initialization 07FD                                           init_ram 03B4  
                                         initloop 03B5                            _I2C1_DO_SEND_ADR_WRITE 0000  
                       __size_of_I2C_Master_Start 0006                         __size_of_I2C_Master_Write 000E  
                         __end_of_I2C1_Initialize 03CC                                       _I2C1_Status 0020  
                      _I2C1_DO_SEND_RESTART_WRITE 0000                                  ??_WDT_Initialize 0070  
                                       _PORTCbits 000E                                    ?_pantallaCarga 0070  
                                      LCD_CMD@CMD 0075                                        ?_LCD_Clear 0070  
                                ??_LCD_Write_4Bit 0072                                 LCD_Write_String@i 0079  
                                ??_LCD_Write_Char 0074                                 __size_of_LCD_Init 0073  
                                  __end_of_Inicio 03D6                                    _I2C1_DO_RX_ACK 0000  
                                _LCD_Write_String 047B                            ?_OSCILLATOR_Initialize 0070  
                             start_initialization 07E8                   __size_of_PIN_MANAGER_Initialize 002F  
                               ??_I2C_Master_Init 0070                                 ??_I2C_Master_Wait 0070  
                               ??_I2C_Master_Stop 0070                                          ??_Inicio 0078  
                                ?_I2C1_Initialize 0070                                       __pdataBANK0 0047  
                                 ??_pantallaCarga 007B                                          ?_LCD_CMD 0070  
                                     __pbssCOMMON 007D                              _I2C1_DO_SEND_RESTART 0000  
                                       ___latbits 0001                                     __pcstackBANK0 0059  
                                     ??_LCD_Clear 0076                                         __pnvBANK0 0063  
                                _I2C_Master_Start 039C                             _rd2RegCompleteHandler 0000  
                                _I2C_Master_Write 03FA                            _PIN_MANAGER_Initialize 04C6  
                           _wr2RegCompleteHandler 0000                             IO_Expander_Write@Data 0071  
                            I2C_Master_Write@data 0070                                          _LCD_Init 0532  
                                        _LATAbits 0018                                          _LATBbits 0019  
                                        _LATCbits 001A                                        _I2C1_DO_RX 0000  
                                      _I2C1_DO_TX 0000                                         clear_ram0 03AE  
                                        _PIE1bits 0717                                          _PIR1bits 070D  
                       _I2C1_DO_SEND_RESTART_READ 0000                                          _SSP1CON1 0190  
                                        _SSP1CON2 0191                                          _SSP1STAT 018F  
                                __size_of_LCD_CMD 0014                                     _I2C1_DO_RESET 0000  
                        __end_of_LCD_Write_String 0498                           ??_OSCILLATOR_Initialize 0070  
                                 _I2C_Master_Init 03D6                                   _I2C_Master_Wait 03E1  
                                 _I2C_Master_Stop 03A2                                          __ptext10 0498  
                                        __ptext11 03BA                                          __ptext20 03E1  
                                        __ptext12 03CC                                          __ptext21 03D6  
                                        __ptext13 0532                                          __ptext14 0452  
                                        __ptext15 043E                                          __ptext16 042B  
                                        __ptext17 03FA                                          __ptext18 03A2  
                                        __ptext19 039C                                      _SSP1CON1bits 0190  
                                    _SSP1CON2bits 0191                           __size_of_LCD_Set_Cursor 002E  
                                   __size_of_Menu 0243                          _I2C1_CallbackReturnReset 0000  
                                 _BackLight_State 0057                                     __size_of_main 0011  
                                    _SSP1STATbits 018F                                      _I2C1_DO_IDLE 0000  
                                    _I2C1_DO_RCEN 0000                          __end_of_I2C_Master_Start 03A2  
                        __end_of_I2C_Master_Write 0408                                LCD_Write_Char@Data 0075  
                                  __pstringtext10 08A7                                    __pstringtext11 08B5  
                                  __pstringtext12 08C3                                    __pstringtext13 08CE  
                                  __pstringtext14 0000                           __size_of_WDT_Initialize 0003  
                         ?_PIN_MANAGER_Initialize 0070                           _I2C1_CallbackReturnStop 0000  
                         __size_of_LCD_Write_4Bit 0014                              _I2C1_DO_ADDRESS_NACK 0000  
                         __size_of_LCD_Write_Char 0015                           __end_of_I2C_Master_Init 03E1  
                         __end_of_I2C_Master_Wait 03ED                           __end_of_I2C_Master_Stop 03A8  
                                 LCD_Init@I2C_Add 0077                          __size_of_I2C1_Initialize 0009  
                                   __pstringtext1 0800                                     __pstringtext2 0820  
                                   __pstringtext3 0834                                     __pstringtext4 0848  
                                   __pstringtext5 085A                                     __pstringtext6 086A  
                                   __pstringtext7 087A                                     __pstringtext8 0889  
                                   __pstringtext9 0898                             __end_of_pantallaCarga 0532  
                                      _SSP1DATPPS 1EC6                                        _SSP1CLKPPS 1EC5  
                               LCD_Set_Cursor@COL 0076                                 LCD_Set_Cursor@ROW 0079  
                  __end_of_PIN_MANAGER_Initialize 04F5  
